# OT Security Monitoring System - Smart City Traffic Testbed

services:
  # --- Smart City Traffic Management Center (TMC) ---
  traffic_management_center:
    build:
      context: .
      dockerfile: ./settings/scada/scada.Dockerfile
    container_name: traffic_management_center
    networks:
      - poc
    ports:
      - "1880:1880"   # Node-RED UI
      - "5020:5020"   # TMC Modbus Server
    volumes:
      - ./settings/scada:/data
    depends_on:
      - intersection_a_controller
      - intersection_b_controller
      - intersection_c_controller
      - intersection_d_controller
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:1880"]
      interval: 10s
      timeout: 5s
      retries: 5

  # --- Intersection Controllers (PLCs) ---
  intersection_a_controller:
    build:
      context: .
      dockerfile: ./settings/plc/plc.Dockerfile
    image: testbed-plc:latest
    container_name: intersection_a
    networks:
      - poc
    ports:
      - "1881:1880"
      - "502:502"
    volumes:
      - ./settings/plc/plc1:/data

  intersection_b_controller:
    image: testbed-plc:latest
    container_name: intersection_b
    networks:
      - poc
    ports:
      - "1882:1880"
      - "503:502"
    volumes:
      - ./settings/plc/plc2:/data

  intersection_c_controller:
    image: testbed-plc:latest
    container_name: intersection_c
    networks:
      - poc
    ports:
      - "1883:1880"
      - "504:502"
    volumes:
      - ./settings/plc/plc3:/data

  intersection_d_controller:
    image: testbed-plc:latest
    container_name: intersection_d
    networks:
      - poc
    ports:
      - "1884:1880"
      - "505:502"
    volumes:
      - ./settings/plc/plc4:/data

  # --- Elasticsearch + Kibana (개발용 single-node) ---
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.13.4
    container_name: es-dev
    networks:
      - poc
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false           # 개발/테스트용
      - ES_JAVA_OPTS=-Xms1g -Xmx1g             # 메모리 할당량을 1GB로 수정
    ports:
      - "9200:9200"
    volumes:
      - esdata:/usr/share/elasticsearch/data

  kibana:
    image: docker.elastic.co/kibana/kibana:8.13.4
    container_name: kib-dev
    networks:
      - poc
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch

  # --- Security Solution (Capture + Parse + ES Index) ---
  solution:
    build:
      context: .
      dockerfile: ./settings/solution/solution.Dockerfile
    container_name: solution
    cap_add:
      - NET_ADMIN
    network_mode: "service:traffic_management_center"  # 동일 NIC(eth0) 스니핑
    volumes:
      - ./pcap:/pcap
      - ./settings/solution:/app
    environment:
      - INTERVAL=30                       # 캡처 주기(초)
      - ES_HOST=http://elasticsearch:9200
      - ES_INDEX_PREFIX=packets           # 결과 인덱스 prefix (ex: packets-modbus_tcp)
    depends_on:
      traffic_management_center:
        condition: service_healthy
      elasticsearch:
        condition: service_started
    tty: true
    stdin_open: true
    command: ["/app/entrypoint.sh"]

volumes:
  esdata:

networks:
  poc:
    external: true

