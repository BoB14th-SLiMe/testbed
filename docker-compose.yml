services:
  # --- Smart City Traffic Management Center (TMC) ---
  traffic_management_center:
    image: bobslime/slime-traffic-management-center:latest
    container_name: traffic_management_center
    networks:
      - poc
    ports:
      - "1880:1880"
      - "5020:5020"
    volumes:
      - ./settings/scada:/data
    depends_on:
      - intersection_a_controller
      - intersection_b_controller
      - intersection_c_controller
      - intersection_d_controller
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:1880"]
      interval: 10s
      timeout: 5s
      retries: 5
    entrypoint: ["node-red", "--settings", "/data/settings.js"]

  # --- Intersection Controllers (PLCs) ---
  intersection_a_controller:
    image: bobslime/slime-testbed-plc:latest
    container_name: intersection_a
    networks:
      - poc
    ports:
      - "1881:1880"
      - "502:502"
    volumes:
      - ./settings/plc/plc1:/data

  intersection_b_controller:
    image: bobslime/slime-testbed-plc:latest
    container_name: intersection_b
    networks:
      - poc
    ports:
      - "1882:1880"
      - "503:502"
    volumes:
      - ./settings/plc/plc2:/data

  intersection_c_controller:
    image: bobslime/slime-testbed-plc:latest
    container_name: intersection_c
    networks:
      - poc
    ports:
      - "1883:1880"
      - "504:502"
    volumes:
      - ./settings/plc/plc3:/data

  intersection_d_controller:
    image: bobslime/slime-testbed-plc:latest
    container_name: intersection_d
    networks:
      - poc
    ports:
      - "1884:1880"
      - "505:502"
    volumes:
      - ./settings/plc/plc4:/data

  # --- Data Pipeline Components ---
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.3
    container_name: zookeeper
    networks:
      - poc
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.5.3
    container_name: kafka
    networks:
      - poc
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics --bootstrap-server localhost:9092 --list"]
      interval: 10s
      timeout: 5s
      retries: 15
      start_period: 40s

  elasticsearch:
    # --- ✨ 수정된 부분: 버전을 8.18.6으로 변경 ---
    image: docker.elastic.co/elasticsearch/elasticsearch:8.18.6
    container_name: es-dev
    networks:
      - poc
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - ES_JAVA_OPTS=-Xms1g -Xmx1g
    ports:
      - "9200:9200"
    volumes:
      - esdata:/usr/share/elasticsearch/data
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200/_cluster/health?wait_for_status=yellow&timeout=5s"]
      interval: 10s
      timeout: 10s
      retries: 15
      start_period: 30s

  # --- Security Solution (Capture -> Parse -> Kafka) ---
  data_pipeline:
    image: bobslime/data_pipeline:latest
    container_name: data_pipeline
    cap_add:
      - NET_ADMIN
    network_mode: "service:traffic_management_center"
    volumes:
      - ./pcap:/pcap
    environment:
      - INTERVAL=30 # 캡처 주기(초)
    depends_on:
      traffic_management_center:
        condition: service_healthy
      kafka:
        condition: service_healthy
    tty: true
    stdin_open: true
    entrypoint: /app/entrypoint.sh

  # --- Backend Application (Kafka -> SLM -> ES) ---
  dashboard-backend:
    image: bobslime/dashboard_backend:latest
    container_name: dashboard-backend
    networks:
      - poc
    ports:
      - "8080:8080"
    depends_on:
      elasticsearch:
        condition: service_healthy
      kafka:
        condition: service_healthy
    environment:
      - SPRING_ELASTICSEARCH_URIS=http://elasticsearch:9200
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    restart: on-failure
    entrypoint: ["java", "-Dfile.encoding=UTF-8", "-jar", "/app/app.jar"]

volumes:
  esdata:

networks:
  poc:
    external: true

