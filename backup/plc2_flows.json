[
    {
        "id": "bf1d25205644a6b4",
        "type": "modbus-read",
        "z": "8b67e1cbd40d7fa8",
        "name": "Read Mode & Parameters",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "1",
        "dataType": "HoldingRegister",
        "adr": "0",
        "quantity": "12",
        "rate": "1",
        "rateUnit": "s",
        "delayOnStart": false,
        "enableDeformedMessages": false,
        "startDelayTime": "",
        "server": "9a1a6d4b376e132b",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 210,
        "y": 200,
        "wires": [
            [
                "e5b787e1d3bba45f"
            ],
            []
        ]
    },
    {
        "id": "e5b787e1d3bba45f",
        "type": "switch",
        "z": "8b67e1cbd40d7fa8",
        "name": "Switch Mode",
        "property": "payload[0]",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "2",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "3",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 450,
        "y": 200,
        "wires": [
            [
                "7a6f4ff41753d18e"
            ],
            [
                "b4c89f89c1d7d57a"
            ],
            [
                "ca5b39f1dd8bc115"
            ],
            [
                "7a6f4ff41753d18e"
            ]
        ]
    },
    {
        "id": "7a6f4ff41753d18e",
        "type": "function",
        "z": "8b67e1cbd40d7fa8",
        "name": "Normal Cycle Logic (Dynamic)",
        "func": "// msg.payload[0] = Mode\n// msg.payload[10] = NS Green Time (from TMC)\n// msg.payload[11] = EW Green Time (from TMC)\n\n// Get dynamic green times from Modbus registers.\n// Default to 5 seconds if values are not set (or 0).\nconst GREEN_TIME_NS = msg.payload[10] || 5;\nconst GREEN_TIME_EW = msg.payload[11] || 5;\nconst YELLOW_TIME = 2;\n\nlet state = context.get('state') || 0;\nlet timer = context.get('timer') || 0;\n\nlet lights = new Array(12).fill(false);\n\n// State machine for traffic light sequence\nswitch (state) {\n    // --- South-North Green --- (1 & 3)\n    case 0:\n        lights[2] = true;  // 1 (South) Green\n        lights[8] = true;  // 3 (North) Green\n        lights[3] = true;  // 2 (East) Red\n        lights[9] = true;  // 4 (West) Red\n        if (timer >= GREEN_TIME_NS) { state++; timer = 0; }\n        break;\n    case 1:\n        lights[1] = true;  // 1 (South) Yellow\n        lights[7] = true;  // 3 (North) Yellow\n        lights[3] = true;  // 2 (East) Red\n        lights[9] = true;  // 4 (West) Red\n        if (timer >= YELLOW_TIME) { state++; timer = 0; }\n        break;\n\n    // --- East-West Green --- (2 & 4)\n    case 2:\n        lights[5] = true;  // 2 (East) Green\n        lights[11] = true; // 4 (West) Green\n        lights[0] = true;  // 1 (South) Red\n        lights[6] = true;  // 3 (North) Red\n        if (timer >= GREEN_TIME_EW) { state++; timer = 0; }\n        break;\n    case 3:\n        lights[4] = true;  // 2 (East) Yellow\n        lights[10] = true; // 4 (West) Yellow\n        lights[0] = true;  // 1 (South) Red\n        lights[6] = true;  // 3 (North) Red\n        if (timer >= YELLOW_TIME) { state = 0; timer = 0; } // Loop back\n        break;\n}\n\ntimer++;\ncontext.set('state', state);\ncontext.set('timer', timer);\n\nmsg.payload = {\n    'value': lights,\n    'fc': 15, // Write Multiple Coils\n    'unitid': 1,\n    'address': 0,\n    'quantity': 12\n};\n\nreturn msg;",
        "outputs": 1,
        "x": 690,
        "y": 160,
        "wires": [
            [
                "7af9c6f19ecb1102"
            ]
        ]
    },
    {
        "id": "b4c89f89c1d7d57a",
        "type": "function",
        "z": "8b67e1cbd40d7fa8",
        "name": "Night Flashing Logic",
        "func": "let blink = context.get('blink') || false;\nblink = !blink;\ncontext.set('blink', blink);\n\nlet lights = new Array(12).fill(false);\n\nif (blink) {\n    lights[1] = true;  // South Yellow\n    lights[4] = true;  // East Yellow\n    lights[7] = true;  // North Yellow\n    lights[10] = true; // West Yellow\n}\n\nmsg.payload = {\n    'value': lights,\n    'fc': 15,\n    'unitid': 1,\n    'address': 0,\n    'quantity': 12\n};\n\nreturn msg;",
        "outputs": 1,
        "x": 670,
        "y": 220,
        "wires": [
            [
                "7af9c6f19ecb1102"
            ]
        ]
    },
    {
        "id": "ca5b39f1dd8bc115",
        "type": "function",
        "z": "8b67e1cbd40d7fa8",
        "name": "All Red Logic",
        "func": "let lights = new Array(12).fill(false);\n\nlights[0] = true; // South Red\nlights[3] = true; // East Red\nlights[6] = true; // North Red\nlights[9] = true; // West Red\n\nmsg.payload = {\n    'value': lights,\n    'fc': 15,\n    'unitid': 1,\n    'address': 0,\n    'quantity': 12\n};\n\nreturn msg;",
        "outputs": 1,
        "x": 650,
        "y": 280,
        "wires": [
            [
                "7af9c6f19ecb1102"
            ]
        ]
    },
    {
        "id": "7af9c6f19ecb1102",
        "type": "modbus-write",
        "z": "8b67e1cbd40d7fa8",
        "name": "Write Lamp State",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "MCoils",
        "adr": "0",
        "quantity": "12",
        "server": "9a1a6d4b376e132b",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 930,
        "y": 200,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "602a1b5d4e4c3e67",
        "type": "modbus-server",
        "z": "8b67e1cbd40d7fa8",
        "name": "PLC Modbus TCP Server",
        "logEnabled": false,
        "hostname": "0.0.0.0",
        "serverPort": "503",
        "responseDelay": 100,
        "delayUnit": "ms",
        "coilsBufferSize": 1024,
        "holdingBufferSize": 1024,
        "inputBufferSize": 1024,
        "discreteBufferSize": 1024,
        "showErrors": false,
        "showStatusActivities": false,
        "x": 220,
        "y": 380,
        "wires": [
            [],
            [],
            [],
            [],
            []
        ]
    },
    {
        "id": "9a1a6d4b376e132b",
        "type": "modbus-client",
        "name": "Internal Client",
        "clienttype": "tcp",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "queueLogEnabled": false,
        "failureLogEnabled": true,
        "tcpHost": "127.0.0.1",
        "tcpPort": "502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": 9600,
        "serialDatabits": 8,
        "serialStopbits": 1,
        "serialParity": "none",
        "serialConnectionDelay": 100,
        "serialAsciiResponseStartDelimiter": "0x3A",
        "unit_id": 1,
        "commandDelay": 1,
        "clientTimeout": 1000,
        "reconnectOnTimeout": true,
        "reconnectTimeout": 2000,
        "parallelUnitIdsAllowed": true,
        "showErrors": false,
        "showWarnings": true,
        "showLogs": true
    },
    {
        "id": "b837082e0a0f8c1e",
        "type": "global-config",
        "env": [],
        "modules": {
            "node-red-contrib-modbus": "5.44.1"
        }
    }
]