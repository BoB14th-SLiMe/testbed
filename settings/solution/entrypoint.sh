#!/bin/bash
set -euo pipefail

INTERVAL="${INTERVAL:-30}"
DATA_DIR="/pcap/data"
OUT_DIR="/pcap/output"
ES_HOST="${ES_HOST:-http://elasticsearch:9200}"
ES_INDEX_PREFIX="${ES_INDEX_PREFIX:-packets}"

mkdir -p "$DATA_DIR" "$OUT_DIR"

echo "=============================="
echo "🟢 SLM Solution Start"
echo "INTERVAL: ${INTERVAL}s"
echo "ES_HOST : ${ES_HOST}"
echo "INDEX   : ${ES_INDEX_PREFIX}-<protocol>"
echo "=============================="

sleep 5

while true; do
  TS="$(date +'%Y%m%d_%H%M%S')"
  PCAP="/pcap/pcap_${TS}.pcap"

  echo ""
  echo "⏱️  [${TS}] Capturing ${INTERVAL}s → ${PCAP}"
  timeout "${INTERVAL}s" tshark -i eth0 -w "${PCAP}" || true

  echo "🔧 [${TS}] Parsing pcap → csv/jsonl (C++)"
  # pcap_parser는 현재 작업 디렉토리(/app)에 'output' 폴더를 생성함
  /usr/local/bin/pcap_parser "${PCAP}"

  # 생성된 파일들을 올바른 위치(/pcap/data)로 이동
  echo "🚚 [${TS}] Moving parsed files to data directory"
  # /app/output 폴더가 존재하고 파일이 있을 경우에만 이동 실행
  if [ -d "/app/output" ] && [ "$(ls -A /app/output)" ]; then
    mv /app/output/* "${DATA_DIR}/"
    rmdir /app/output
  else
    echo "   -> No files were generated by pcap_parser."
  fi

  echo "🧩 [${TS}] Running high-performance Python parser (multiprocessing)"
  python3 /app/json2csv_parser.py

  echo "📦 [${TS}] Indexing JSONL to Elasticsearch"
  python3 /app/jsonl_bulk_indexer.py \
    --es "${ES_HOST}" \
    --prefix "${ES_INDEX_PREFIX}" \
    --glob "${DATA_DIR}/*.jsonl"

  echo "✅ [${TS}] Batch done."
done