[
    {
        "disabled": false,
        "env": [],
        "id": "dee68aa0c07e4c62",
        "info": "",
        "label": "플로우 1",
        "type": "tab"
    },
    {
        "bufferCommands": true,
        "clientTimeout": 1000,
        "clienttype": "tcp",
        "commandDelay": 1,
        "failureLogEnabled": true,
        "id": "bb07d44f9dcc13ad",
        "name": "TMC Localhost Client",
        "parallelUnitIdsAllowed": true,
        "queueLogEnabled": false,
        "reconnectOnTimeout": true,
        "reconnectTimeout": 2000,
        "serialAsciiResponseStartDelimiter": "0x3A",
        "serialBaudrate": 9600,
        "serialConnectionDelay": 100,
        "serialDatabits": 8,
        "serialParity": "none",
        "serialPort": "/dev/ttyUSB",
        "serialStopbits": 1,
        "serialType": "RTU-BUFFERD",
        "stateLogEnabled": false,
        "tcpHost": "127.0.0.1",
        "tcpPort": "5020",
        "tcpType": "DEFAULT",
        "type": "modbus-client",
        "unit_id": 1
    },
    {
        "bufferCommands": true,
        "clientTimeout": 1000,
        "clienttype": "tcp",
        "commandDelay": 1,
        "failureLogEnabled": true,
        "id": "002416d95ed618bb",
        "name": "intersection_a",
        "parallelUnitIdsAllowed": true,
        "queueLogEnabled": false,
        "reconnectOnTimeout": true,
        "reconnectTimeout": 2000,
        "serialAsciiResponseStartDelimiter": "0x3A",
        "serialBaudrate": 9600,
        "serialConnectionDelay": 100,
        "serialDatabits": 8,
        "serialParity": "none",
        "serialPort": "/dev/ttyUSB",
        "serialStopbits": 1,
        "serialType": "RTU-BUFFERD",
        "stateLogEnabled": false,
        "tcpHost": "intersection_a_controller",
        "tcpPort": 502,
        "tcpType": "DEFAULT",
        "type": "modbus-client",
        "unit_id": 1
    },
    {
        "bufferCommands": true,
        "clientTimeout": 1000,
        "clienttype": "tcp",
        "commandDelay": 1,
        "failureLogEnabled": true,
        "id": "86497a2f59dbf570",
        "name": "intersection_b",
        "parallelUnitIdsAllowed": true,
        "queueLogEnabled": false,
        "reconnectOnTimeout": true,
        "reconnectTimeout": 2000,
        "serialAsciiResponseStartDelimiter": "0x3A",
        "serialBaudrate": 9600,
        "serialConnectionDelay": 100,
        "serialDatabits": 8,
        "serialParity": "none",
        "serialPort": "/dev/ttyUSB",
        "serialStopbits": 1,
        "serialType": "RTU-BUFFERD",
        "stateLogEnabled": false,
        "tcpHost": "intersection_b_controller",
        "tcpPort": "502",
        "tcpType": "DEFAULT",
        "type": "modbus-client",
        "unit_id": 1
    },
    {
        "bufferCommands": true,
        "clientTimeout": 1000,
        "clienttype": "tcp",
        "commandDelay": 1,
        "failureLogEnabled": true,
        "id": "946a34dccba15f97",
        "name": "intersection_c",
        "parallelUnitIdsAllowed": true,
        "queueLogEnabled": false,
        "reconnectOnTimeout": true,
        "reconnectTimeout": 2000,
        "serialAsciiResponseStartDelimiter": "0x3A",
        "serialBaudrate": 9600,
        "serialConnectionDelay": 100,
        "serialDatabits": 8,
        "serialParity": "none",
        "serialPort": "/dev/ttyUSB",
        "serialStopbits": 1,
        "serialType": "RTU-BUFFERD",
        "stateLogEnabled": false,
        "tcpHost": "intersection_c_controller",
        "tcpPort": "502",
        "tcpType": "DEFAULT",
        "type": "modbus-client",
        "unit_id": 1
    },
    {
        "bufferCommands": true,
        "clientTimeout": 1000,
        "clienttype": "tcp",
        "commandDelay": 1,
        "failureLogEnabled": true,
        "id": "282a9bdec27cff20",
        "name": "intersection_d",
        "parallelUnitIdsAllowed": true,
        "queueLogEnabled": false,
        "reconnectOnTimeout": true,
        "reconnectTimeout": 2000,
        "serialAsciiResponseStartDelimiter": "0x3A",
        "serialBaudrate": 9600,
        "serialConnectionDelay": 100,
        "serialDatabits": 8,
        "serialParity": "none",
        "serialPort": "/dev/ttyUSB",
        "serialStopbits": 1,
        "serialType": "RTU-BUFFERD",
        "stateLogEnabled": false,
        "tcpHost": "intersection_d_controller",
        "tcpPort": "502",
        "tcpType": "DEFAULT",
        "type": "modbus-client",
        "unit_id": 1
    },
    {
        "icon": "traffic",
        "id": "main_ui_tab",
        "name": "스마트시티 통합 교통 관제",
        "order": 1,
        "type": "ui_tab"
    },
    {
        "env": [],
        "id": "f5944f21c03262c7",
        "modules": {
            "node-red-contrib-modbus": "5.44.1",
            "node-red-dashboard": "3.6.6"
        },
        "type": "global-config"
    },
    {
        "className": "",
        "collapse": false,
        "disp": true,
        "id": "group_tmc_control",
        "name": "종합 현황",
        "order": 1,
        "tab": "main_ui_tab",
        "type": "ui_group",
        "width": 24
    },
    {
        "collapse": false,
        "disp": true,
        "id": "group_traffic_trends",
        "name": "교통량 추세 분석",
        "order": 6,
        "tab": "main_ui_tab",
        "type": "ui_group",
        "width": "24"
    },
    {
        "collapse": false,
        "disp": true,
        "id": "group_emergency_control",
        "name": "긴급 제어",
        "order": 7,
        "tab": "main_ui_tab",
        "type": "ui_group",
        "width": "24"
    },
    {
        "collapse": false,
        "disp": true,
        "id": "group_intersection_a",
        "name": "A 교차로 현황 및 제어",
        "order": 2,
        "tab": "main_ui_tab",
        "type": "ui_group",
        "width": 12
    },
    {
        "collapse": false,
        "disp": true,
        "id": "group_intersection_b",
        "name": "B 교차로 현황 및 제어",
        "order": 3,
        "tab": "main_ui_tab",
        "type": "ui_group",
        "width": 12
    },
    {
        "collapse": false,
        "disp": true,
        "id": "group_intersection_c",
        "name": "C 교차로 현황 및 제어",
        "order": 4,
        "tab": "main_ui_tab",
        "type": "ui_group",
        "width": 12
    },
    {
        "collapse": false,
        "disp": true,
        "id": "group_intersection_d",
        "name": "D 교차로 현황 및 제어",
        "order": 5,
        "tab": "main_ui_tab",
        "type": "ui_group",
        "width": 12
    },
    {
        "id": "b39e20c23d084f18",
        "site": {
            "allowSwipe": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "hideToolbar": "false",
            "lockMenu": "false",
            "name": "Node-RED Dashboard",
            "sizes": {
                "cx": 6,
                "cy": 6,
                "gx": 6,
                "gy": 6,
                "px": 0,
                "py": 0,
                "sx": 48,
                "sy": 48
            }
        },
        "theme": {
            "angularTheme": {
                "accents": "blue",
                "background": "grey",
                "palette": "light",
                "primary": "indigo",
                "warn": "red"
            },
            "customTheme": {
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "default": "#4B7930",
                "name": "Untitled Theme 1"
            },
            "darkTheme": {
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "default": "#097479",
                "edited": false
            },
            "lightTheme": {
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "default": "#0094CE",
                "edited": true,
                "reset": false
            },
            "name": "theme-light",
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "edited": false,
                    "value": "#0094CE"
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                },
                "group-backgroundColor": {
                    "edited": false,
                    "value": "#ffffff"
                },
                "group-borderColor": {
                    "edited": false,
                    "value": "#ffffff"
                },
                "group-textColor": {
                    "edited": false,
                    "value": "#1bbfff"
                },
                "page-backgroundColor": {
                    "edited": false,
                    "value": "#fafafa"
                },
                "page-sidebar-backgroundColor": {
                    "edited": false,
                    "value": "#ffffff"
                },
                "page-titlebar-backgroundColor": {
                    "edited": false,
                    "value": "#0094CE"
                },
                "widget-backgroundColor": {
                    "edited": false,
                    "value": "#0094ce"
                },
                "widget-borderColor": {
                    "edited": false,
                    "value": "#ffffff"
                },
                "widget-textColor": {
                    "edited": false,
                    "value": "#111111"
                }
            }
        },
        "type": "ui_base"
    },
    {
        "group": "group_intersection_a",
        "height": 1,
        "id": "59bd89bcb3bd3645",
        "name": "spacer",
        "order": 7,
        "type": "ui_spacer",
        "width": 4,
        "z": "dee68aa0c07e4c62"
    },
    {
        "group": "group_intersection_a",
        "height": 1,
        "id": "a4af39f0b9807417",
        "name": "spacer",
        "order": 9,
        "type": "ui_spacer",
        "width": 4,
        "z": "dee68aa0c07e4c62"
    },
    {
        "group": "group_intersection_b",
        "height": 1,
        "id": "c74e584c10e650ea",
        "name": "spacer",
        "order": 7,
        "type": "ui_spacer",
        "width": 4,
        "z": "dee68aa0c07e4c62"
    },
    {
        "group": "group_intersection_b",
        "height": 1,
        "id": "496632d739b19afa",
        "name": "spacer",
        "order": 9,
        "type": "ui_spacer",
        "width": 4,
        "z": "dee68aa0c07e4c62"
    },
    {
        "group": "group_intersection_c",
        "height": 1,
        "id": "fc888a47fb7d19c6",
        "name": "spacer",
        "order": 7,
        "type": "ui_spacer",
        "width": 4,
        "z": "dee68aa0c07e4c62"
    },
    {
        "group": "group_intersection_c",
        "height": 1,
        "id": "7ba27c204c033685",
        "name": "spacer",
        "order": 9,
        "type": "ui_spacer",
        "width": 4,
        "z": "dee68aa0c07e4c62"
    },
    {
        "group": "group_intersection_d",
        "height": 1,
        "id": "5c5dbd4b1d44966d",
        "name": "spacer",
        "order": 7,
        "type": "ui_spacer",
        "width": 4,
        "z": "dee68aa0c07e4c62"
    },
    {
        "group": "group_intersection_d",
        "height": 1,
        "id": "5fbbc928e05a9547",
        "name": "spacer",
        "order": 9,
        "type": "ui_spacer",
        "width": 4,
        "z": "dee68aa0c07e4c62"
    },
    {
        "group": "group_emergency_control",
        "height": 1,
        "id": "57b3b029c33ec73b",
        "name": "spacer",
        "order": 4,
        "type": "ui_spacer",
        "width": 12,
        "z": "dee68aa0c07e4c62"
    },
    {
        "coilsBufferSize": "1024",
        "delayUnit": "ms",
        "discreteBufferSize": "1024",
        "holdingBufferSize": "1024",
        "hostname": "0.0.0.0",
        "id": "8cc46f0420c78659",
        "inputBufferSize": "1024",
        "logEnabled": false,
        "name": "TMC Data Hub Server",
        "responseDelay": 100,
        "serverPort": "5020",
        "showErrors": false,
        "showStatusActivities": false,
        "type": "modbus-server",
        "wires": [
            [],
            [],
            [],
            [],
            []
        ],
        "x": 180,
        "y": 60,
        "z": "dee68aa0c07e4c62"
    },
    {
        "crontab": "",
        "id": "278223d0495bf003",
        "name": "Traffic Simulator Tick",
        "once": true,
        "onceDelay": 0.1,
        "props": [],
        "repeat": "5",
        "topic": "",
        "type": "inject",
        "wires": [
            [
                "9d3539210aaef774"
            ]
        ],
        "x": 160,
        "y": 140,
        "z": "dee68aa0c07e4c62"
    },
    {
        "func": "// === 지능형 트래픽 시뮬레이터 ===\n\nconst currentTime = new Date();\nconst hour = currentTime.getHours();\nconst minute = currentTime.getMinutes();\nconst dayOfWeek = currentTime.getDay();\n\n// 시간대별 트래픽 패턴 정의\nfunction getTrafficPattern(hour, isWeekend) {\n    if (isWeekend) {\n        // 주말 패턴\n        if (hour >= 11 && hour <= 15) return { base: 60, variance: 20 };\n        if (hour >= 18 && hour <= 21) return { base: 50, variance: 15 };\n        return { base: 30, variance: 10 };\n    } else {\n        // 평일 패턴\n        if (hour >= 7 && hour <= 9) return { base: 85, variance: 10 };   // 아침 러시\n        if (hour >= 18 && hour <= 20) return { base: 90, variance: 10 }; // 저녁 러시\n        if (hour >= 12 && hour <= 13) return { base: 60, variance: 15 }; // 점심시간\n        if (hour >= 22 || hour <= 5) return { base: 15, variance: 5 };   // 심야\n        return { base: 40, variance: 15 };\n    }\n}\n\n// 교차로별 트래픽 특성 (위치별 가중치)\nconst intersectionWeights = [\n    { ns: 1.0, ew: 0.9 },  // 교차로 A - 주도로/부도로\n    { ns: 0.8, ew: 1.1 },  // 교차로 B - 부도로/상업지구\n    { ns: 1.2, ew: 0.7 },  // 교차로 C - 대로/골목길\n    { ns: 0.9, ew: 0.9 }   // 교차로 D - 균등\n];\n\nconst isWeekend = dayOfWeek === 0 || dayOfWeek === 6;\nconst pattern = getTrafficPattern(hour, isWeekend);\n\n// 각 교차로별 트래픽 볼륨 생성\nconst trafficVolumes = [];\nfor (let i = 0; i < 4; i++) {\n    const weight = intersectionWeights[i];\n    \n    // 기본 트래픽에 변동성 추가\n    let volumeNS = pattern.base * weight.ns;\n    let volumeEW = pattern.base * weight.ew;\n    \n    // 랜덤 변동 추가 (±variance)\n    volumeNS += (Math.random() - 0.5) * pattern.variance * 2;\n    volumeEW += (Math.random() - 0.5) * pattern.variance * 2;\n    \n    // 특별 이벤트 시뮬레이션 (10% 확률로 한 방향 혼잡)\n    if (Math.random() < 0.1) {\n        if (Math.random() < 0.5) {\n            volumeNS = Math.min(volumeNS * 1.5, 100);\n        } else {\n            volumeEW = Math.min(volumeEW * 1.5, 100);\n        }\n    }\n    \n    // 범위 제한 (0-100)\n    volumeNS = Math.max(0, Math.min(100, Math.round(volumeNS)));\n    volumeEW = Math.max(0, Math.min(100, Math.round(volumeEW)));\n    \n    trafficVolumes.push(volumeNS, volumeEW);\n}\n\n// TMC 허브에 데이터 쓰기\nmsg.payload = { \n    value: trafficVolumes, \n    fc: 16, \n    unitid: 1, \n    address: 100, \n    quantity: 8 \n};\n\n// 진단 정보 추가\nmsg.diagnostics = {\n    timestamp: currentTime.toISOString(),\n    hour: hour,\n    isWeekend: isWeekend,\n    pattern: pattern.base,\n    volumes: trafficVolumes\n};\n\nreturn msg;",
        "id": "9d3539210aaef774",
        "name": "Intelligent Traffic Simulator",
        "outputs": 1,
        "type": "function",
        "wires": [
            [
                "fb1879e1a12ea9cb",
                "468f90596b387d2b"
            ]
        ],
        "x": 430,
        "y": 140,
        "z": "dee68aa0c07e4c62"
    },
    {
        "func": "// === 교통량 예측 엔진 ===\n\n// 이력 데이터 관리\nlet history = flow.get('trafficHistory') || [];\nconst MAX_HISTORY = 60; // 최근 5분 데이터 유지 (5초마다 샘플링)\n\n// 현재 데이터 추가\nif (msg.diagnostics && msg.diagnostics.volumes) {\n    history.push({\n        timestamp: Date.now(),\n        volumes: msg.diagnostics.volumes,\n        hour: msg.diagnostics.hour\n    });\n    \n    // 최대 크기 유지\n    if (history.length > MAX_HISTORY) {\n        history = history.slice(-MAX_HISTORY);\n    }\n    \n    flow.set('trafficHistory', history);\n}\n\n// 예측 수행\nif (history.length >= 12) { // 최소 1분 데이터 필요\n    const predictions = [];\n    \n    for (let i = 0; i < 8; i++) {\n        // 각 차선별 이동 평균 계산\n        const recentValues = history.slice(-12).map(h => h.volumes[i]);\n        const average = recentValues.reduce((a, b) => a + b, 0) / recentValues.length;\n        \n        // 추세 계산\n        const oldAvg = recentValues.slice(0, 6).reduce((a, b) => a + b, 0) / 6;\n        const newAvg = recentValues.slice(6, 12).reduce((a, b) => a + b, 0) / 6;\n        const trend = newAvg - oldAvg;\n        \n        // 예측값 = 평균 + 추세\n        let prediction = average + trend * 0.5;\n        prediction = Math.max(0, Math.min(100, Math.round(prediction)));\n        \n        predictions.push(prediction);\n    }\n    \n    // 예측 데이터를 별도 주소에 저장\n    msg.payload = {\n        value: predictions,\n        fc: 16,\n        unitid: 1,\n        address: 110, // 예측 데이터 주소\n        quantity: 8\n    };\n    \n    msg.predictions = predictions;\n    return msg;\n}\n\nreturn null;",
        "id": "468f90596b387d2b",
        "name": "Traffic Prediction Engine",
        "outputs": 1,
        "type": "function",
        "wires": [
            [
                "223e93b4e2c9e071"
            ]
        ],
        "x": 670,
        "y": 80,
        "z": "dee68aa0c07e4c62"
    },
    {
        "adr": "110",
        "dataType": "MHoldingRegisters",
        "delayOnStart": false,
        "emptyMsgOnFail": false,
        "id": "223e93b4e2c9e071",
        "keepMsgProperties": false,
        "name": "Write Predictions",
        "quantity": "8",
        "server": "bb07d44f9dcc13ad",
        "showErrors": false,
        "showStatusActivities": false,
        "showWarnings": true,
        "startDelayTime": "",
        "type": "modbus-write",
        "unitid": "",
        "wires": [
            [],
            []
        ],
        "x": 890,
        "y": 80,
        "z": "dee68aa0c07e4c62"
    },
    {
        "adr": "100",
        "dataType": "HoldingRegister",
        "delayOnStart": false,
        "emptyMsgOnFail": false,
        "enableDeformedMessages": false,
        "id": "a7a5a31291fb4705",
        "ioFile": "",
        "logIOActivities": false,
        "name": "Read Traffic Data from Hub",
        "quantity": "18",
        "rate": "1",
        "rateUnit": "s",
        "server": "bb07d44f9dcc13ad",
        "showErrors": false,
        "showStatusActivities": false,
        "showWarnings": true,
        "startDelayTime": "",
        "topic": "",
        "type": "modbus-read",
        "unitid": "",
        "useIOFile": false,
        "useIOForPayload": false,
        "wires": [
            [
                "6a06a5046785d1d9",
                "1ecf8a0a99bb9fe8"
            ],
            [
                "110423e07dba0598",
                "170f1192e7948685"
            ]
        ],
        "x": 180,
        "y": 240,
        "z": "dee68aa0c07e4c62"
    },
    {
        "finalize": "",
        "func": "// === 향상된 적응형 제어 로직 ===\n\nconst volumes = msg.payload.slice(0, 8);      // 현재 트래픽\nconst predictions = msg.payload.slice(8, 16); // 예측 트래픽 (있으면)\nconst intersections = ['a', 'b', 'c', 'd'];\n\nif (!Array.isArray(volumes) || volumes.length < 8) {\n    node.warn(\"유효하지 않은 트래픽 데이터\");\n    return null;\n}\n\nconst currentHour = new Date().getHours();\nconst isPeakHour = (currentHour >= 7 && currentHour <= 9) || \n                   (currentHour >= 18 && currentHour <= 20);\n\n// 교차로 간 동기화를 위한 오프셋 계산\nfunction calculateSyncOffset(index) {\n    // 인접 교차로와 녹색 시작 시간을 조정하여 녹색파 생성\n    const baseOffset = index * 15; // 15초씩 차이\n    return baseOffset;\n}\n\n// 혼잡도 계산\nfunction calculateCongestionLevel(volumeNS, volumeEW) {\n    const maxVolume = Math.max(volumeNS, volumeEW);\n    if (maxVolume > 85) return 2; // 높음\n    if (maxVolume > 60) return 1; // 중간\n    return 0; // 낮음\n}\n\n// 적응형 녹색 시간 계산\nfunction calculateOptimalGreenTime(currentVolume, predictedVolume, isPeak) {\n    // 현재와 예측값의 가중 평균\n    const effectiveVolume = predictedVolume \n        ? currentVolume * 0.7 + predictedVolume * 0.3 \n        : currentVolume;\n    \n    // 기본 녹색 시간 (5-30초)\n    let greenTime = 5 + Math.round((effectiveVolume / 100) * 20);\n    \n    // 피크 시간 보정\n    if (isPeak) {\n        greenTime = Math.min(greenTime * 1.2, 30);\n    }\n    \n    // 최소/최대 제한\n    return Math.max(5, Math.min(30, Math.round(greenTime)));\n}\n\n// 각 교차로별로 제어 명령 생성\nfor (let i = 0; i < 4; i++) {\n    const ns_volume = volumes[i * 2];\n    const ew_volume = volumes[i * 2 + 1];\n    \n    const ns_predicted = predictions ? predictions[i * 2] : ns_volume;\n    const ew_predicted = predictions ? predictions[i * 2 + 1] : ew_volume;\n    \n    const ns_green_time = calculateOptimalGreenTime(ns_volume, ns_predicted, isPeakHour);\n    const ew_green_time = calculateOptimalGreenTime(ew_volume, ew_predicted, isPeakHour);\n    \n    const congestionLevel = calculateCongestionLevel(ns_volume, ew_volume);\n    const syncOffset = calculateSyncOffset(i);\n    \n    // PLC에 전송할 데이터 패킷 구성\n    // 주소 10-18: 제어 파라미터\n    const controlData = [\n        ns_green_time,     // 주소 10: NS 녹색 시간\n        ew_green_time,     // 주소 11: EW 녹색 시간\n        ns_volume,         // 주소 12: NS 트래픽 볼륨\n        ew_volume,         // 주소 13: EW 트래픽 볼륨\n        currentHour,       // 주소 14: 현재 시간\n        0,                 // 주소 15: NS 보행자 요청 (PLC에서 관리)\n        0,                 // 주소 16: EW 보행자 요청 (PLC에서 관리)\n        congestionLevel,   // 주소 17: 혼잡도\n        syncOffset         // 주소 18: 동기화 오프셋\n    ];\n    \n    // 각 교차로 PLC로 전송\n    node.send({\n        topic: intersections[i],\n        payload: {\n            value: controlData,\n            fc: 16,\n            unitid: 1,\n            address: 10,\n            quantity: 9\n        },\n        diagnostics: {\n            intersection: intersections[i].toUpperCase(),\n            ns_volume: ns_volume,\n            ew_volume: ew_volume,\n            ns_green: ns_green_time,\n            ew_green: ew_green_time,\n            congestion: congestionLevel,\n            syncOffset: syncOffset\n        }\n    });\n}\n\nreturn null;",
        "id": "6a06a5046785d1d9",
        "initialize": "",
        "libs": [],
        "name": "Enhanced Adaptive Control Logic",
        "noerr": 0,
        "outputs": 1,
        "timeout": "",
        "type": "function",
        "wires": [
            [
                "7d96c572120206c6",
                "85931d3bd83b58c5"
            ]
        ],
        "x": 530,
        "y": 240,
        "z": "dee68aa0c07e4c62"
    },
    {
        "active": false,
        "complete": "diagnostics",
        "console": false,
        "id": "85931d3bd83b58c5",
        "name": "Control Diagnostics",
        "statusType": "auto",
        "statusVal": "",
        "targetType": "msg",
        "tosidebar": true,
        "tostatus": false,
        "type": "debug",
        "wires": [],
        "x": 800,
        "y": 180,
        "z": "dee68aa0c07e4c62"
    },
    {
        "checkall": "true",
        "id": "7d96c572120206c6",
        "name": "Dispatch to PLC",
        "outputs": 4,
        "property": "topic",
        "propertyType": "msg",
        "repair": false,
        "rules": [
            {
                "t": "eq",
                "v": "a",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "b",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "c",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "d",
                "vt": "str"
            }
        ],
        "type": "switch",
        "wires": [
            [
                "2e12b6811b9bc974"
            ],
            [
                "fed1d509a9e7d0ca"
            ],
            [
                "17293110ae423556"
            ],
            [
                "b1021c40c5264768"
            ]
        ],
        "x": 810,
        "y": 240,
        "z": "dee68aa0c07e4c62"
    },
    {
        "adr": "10",
        "dataType": "MHoldingRegisters",
        "delayOnStart": false,
        "emptyMsgOnFail": false,
        "id": "2e12b6811b9bc974",
        "keepMsgProperties": false,
        "name": "Write PLC A Control",
        "quantity": "9",
        "server": "002416d95ed618bb",
        "showErrors": false,
        "showStatusActivities": false,
        "showWarnings": true,
        "startDelayTime": "",
        "type": "modbus-write",
        "unitid": "",
        "wires": [
            [],
            []
        ],
        "x": 1040,
        "y": 200,
        "z": "dee68aa0c07e4c62"
    },
    {
        "adr": "10",
        "dataType": "MHoldingRegisters",
        "delayOnStart": false,
        "emptyMsgOnFail": false,
        "id": "fed1d509a9e7d0ca",
        "keepMsgProperties": false,
        "name": "Write PLC B Control",
        "quantity": "9",
        "server": "86497a2f59dbf570",
        "showErrors": false,
        "showStatusActivities": false,
        "showWarnings": true,
        "startDelayTime": "",
        "type": "modbus-write",
        "unitid": "",
        "wires": [
            [],
            []
        ],
        "x": 1040,
        "y": 240,
        "z": "dee68aa0c07e4c62"
    },
    {
        "adr": "10",
        "dataType": "MHoldingRegisters",
        "delayOnStart": false,
        "emptyMsgOnFail": false,
        "id": "17293110ae423556",
        "keepMsgProperties": false,
        "name": "Write PLC C Control",
        "quantity": "9",
        "server": "946a34dccba15f97",
        "showErrors": false,
        "showStatusActivities": false,
        "showWarnings": true,
        "startDelayTime": "",
        "type": "modbus-write",
        "unitid": "",
        "wires": [
            [],
            []
        ],
        "x": 1040,
        "y": 280,
        "z": "dee68aa0c07e4c62"
    },
    {
        "adr": "10",
        "dataType": "MHoldingRegisters",
        "delayOnStart": false,
        "emptyMsgOnFail": false,
        "id": "b1021c40c5264768",
        "keepMsgProperties": false,
        "name": "Write PLC D Control",
        "quantity": "9",
        "server": "282a9bdec27cff20",
        "showErrors": false,
        "showStatusActivities": false,
        "showWarnings": true,
        "startDelayTime": "",
        "type": "modbus-write",
        "unitid": "",
        "wires": [
            [],
            []
        ],
        "x": 1040,
        "y": 320,
        "z": "dee68aa0c07e4c62"
    },
    {
        "func": "// === 향상된 데이터 분배기 ===\n\nconst topics = ['A_NS', 'A_EW', 'B_NS', 'B_EW', 'C_NS', 'C_EW', 'D_NS', 'D_EW'];\nconst outputs = [];\n\n// 현재 트래픽 데이터\nif (!Array.isArray(msg.payload) || msg.payload.length < 8) {\n    for (let i = 0; i < 8; i++) {\n        outputs.push({\n            topic: topics[i],\n            payload: 0,\n            predicted: 0\n        });\n    }\n    node.warn(\"Invalid traffic data, sending defaults\");\n    return outputs;\n}\n\n// 현재 및 예측 데이터 처리\nfor (let i = 0; i < 8; i++) {\n    const current = msg.payload[i] || 0;\n    const predicted = msg.payload[i + 8] || current;\n    \n    outputs.push({\n        topic: topics[i],\n        payload: current,\n        predicted: predicted,\n        trend: predicted > current ? 'up' : (predicted < current ? 'down' : 'stable')\n    });\n}\n\nreturn outputs;",
        "id": "1ecf8a0a99bb9fe8",
        "name": "Enhanced Data Splitter",
        "outputs": 8,
        "type": "function",
        "wires": [
            [
                "14cc504ba7616766",
                "9478551b93ae47fc"
            ],
            [
                "d32efdc43afea1ec",
                "31eb5358faa77077"
            ],
            [
                "46175ca4dd108094",
                "7dd7a64caa59c4c5"
            ],
            [
                "be1c32ba317ca42a",
                "c16e4a1bce1125f3"
            ],
            [
                "dd4016fc5dd46543",
                "69c25312d7754ca4"
            ],
            [
                "40ec8a5b8e9b40b1",
                "b5f8bdbdb54cd929"
            ],
            [
                "314fe059db67a47b",
                "493bed492d4f76fe"
            ],
            [
                "8ee3a0e56a20d375",
                "31ead39a8d44dd01"
            ]
        ],
        "x": 1050,
        "y": 440,
        "z": "dee68aa0c07e4c62"
    },
    {
        "adr": "100",
        "dataType": "MHoldingRegisters",
        "delayOnStart": false,
        "emptyMsgOnFail": false,
        "id": "fb1879e1a12ea9cb",
        "keepMsgProperties": false,
        "name": "Write to TMC Data Hub",
        "quantity": "8",
        "server": "bb07d44f9dcc13ad",
        "showErrors": false,
        "showStatusActivities": false,
        "showWarnings": true,
        "startDelayTime": "",
        "type": "modbus-write",
        "unitid": "",
        "wires": [
            [],
            []
        ],
        "x": 710,
        "y": 140,
        "z": "dee68aa0c07e4c62"
    },
    {
        "finalize": "",
        "func": "// === 긴급차량 우선 신호 제어 (개별/전체 해제 기능 추가) ===\n\nconst payloadValue = msg.payload; // 버튼에서 온 값 (-1, 0, 1, 2)\nconst selectedIntersection = flow.get('selected_intersection') || 'a'; // 드롭다운에서 선택된 교차로\n\nif (payloadValue === -1) {\n    // === 개별 해제 로직 ===\n    // 선택된 교차로 하나에만 해제 신호([0, 0])를 보냅니다.\n    node.send({\n        topic: selectedIntersection,\n        payload: { value: [0, 0], fc: 16, unitid: 1, address: 20, quantity: 2 }\n    });\n\n} else if (payloadValue === 0) {\n    // === 전체 해제 로직 ===\n    // 모든 교차로에 해제 신호([0, 0])를 보냅니다.\n    ['a', 'b', 'c', 'd'].forEach(int => {\n        node.send({\n            topic: int,\n            payload: { value: [0, 0], fc: 16, unitid: 1, address: 20, quantity: 2 }\n        });\n    });\n\n} else {\n    // === 활성화 로직 (payload: 1 또는 2) ===\n    // 선택된 교차로에 활성화 신호([1, 방향])를 보냅니다.\n    node.send({\n        topic: selectedIntersection,\n        payload: {\n            value: [1, payloadValue], // [활성화(1), 방향(1=NS, 2=EW)]\n            fc: 16,\n            unitid: 1,\n            address: 20,\n            quantity: 2\n        }\n    });\n}\n\nreturn null;",
        "id": "093834d3a2a6e16f",
        "initialize": "",
        "libs": [],
        "name": "Emergency Vehicle Controller",
        "noerr": 0,
        "outputs": 1,
        "timeout": "",
        "type": "function",
        "wires": [
            [
                "c4b4e4940cc3b9f8"
            ]
        ],
        "x": 470,
        "y": 500,
        "z": "dee68aa0c07e4c62"
    },
    {
        "checkall": "true",
        "id": "c4b4e4940cc3b9f8",
        "name": "EVP Dispatcher",
        "outputs": 4,
        "property": "topic",
        "propertyType": "msg",
        "repair": false,
        "rules": [
            {
                "t": "eq",
                "v": "a",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "b",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "c",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "d",
                "vt": "str"
            }
        ],
        "type": "switch",
        "wires": [
            [
                "dd583ac415fae222"
            ],
            [
                "473abf6701d25154"
            ],
            [
                "37250cf1a3fb37c3"
            ],
            [
                "c9179e0721543d90"
            ]
        ],
        "x": 560,
        "y": 600,
        "z": "dee68aa0c07e4c62"
    },
    {
        "adr": "20",
        "dataType": "MHoldingRegisters",
        "delayOnStart": false,
        "emptyMsgOnFail": false,
        "id": "dd583ac415fae222",
        "keepMsgProperties": false,
        "name": "Write EVP A",
        "quantity": "2",
        "server": "002416d95ed618bb",
        "showErrors": false,
        "showStatusActivities": false,
        "showWarnings": true,
        "startDelayTime": "",
        "type": "modbus-write",
        "unitid": "",
        "wires": [
            [],
            []
        ],
        "x": 810,
        "y": 460,
        "z": "dee68aa0c07e4c62"
    },
    {
        "adr": "20",
        "dataType": "MHoldingRegisters",
        "delayOnStart": false,
        "emptyMsgOnFail": false,
        "id": "473abf6701d25154",
        "keepMsgProperties": false,
        "name": "Write EVP B",
        "quantity": "2",
        "server": "86497a2f59dbf570",
        "showErrors": false,
        "showStatusActivities": false,
        "showWarnings": true,
        "startDelayTime": "",
        "type": "modbus-write",
        "unitid": "",
        "wires": [
            [],
            []
        ],
        "x": 810,
        "y": 500,
        "z": "dee68aa0c07e4c62"
    },
    {
        "adr": "20",
        "dataType": "MHoldingRegisters",
        "delayOnStart": false,
        "emptyMsgOnFail": false,
        "id": "37250cf1a3fb37c3",
        "keepMsgProperties": false,
        "name": "Write EVP C",
        "quantity": "2",
        "server": "946a34dccba15f97",
        "showErrors": false,
        "showStatusActivities": false,
        "showWarnings": true,
        "startDelayTime": "",
        "type": "modbus-write",
        "unitid": "",
        "wires": [
            [],
            []
        ],
        "x": 810,
        "y": 540,
        "z": "dee68aa0c07e4c62"
    },
    {
        "adr": "20",
        "dataType": "MHoldingRegisters",
        "delayOnStart": false,
        "emptyMsgOnFail": false,
        "id": "c9179e0721543d90",
        "keepMsgProperties": false,
        "name": "Write EVP D",
        "quantity": "2",
        "server": "282a9bdec27cff20",
        "showErrors": false,
        "showStatusActivities": false,
        "showWarnings": true,
        "startDelayTime": "",
        "type": "modbus-write",
        "unitid": "",
        "wires": [
            [],
            []
        ],
        "x": 810,
        "y": 580,
        "z": "dee68aa0c07e4c62"
    },
    {
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "format": "{{value}}%",
        "group": "group_tmc_control",
        "gtype": "gage",
        "height": 2,
        "id": "14cc504ba7616766",
        "label": "Volume",
        "max": "100",
        "min": 0,
        "name": "A (남↔북)",
        "order": 1,
        "seg1": "40",
        "seg2": "70",
        "title": "A (남↔북)",
        "type": "ui_gauge",
        "width": 3,
        "wires": [],
        "x": 1360,
        "y": 100,
        "z": "dee68aa0c07e4c62"
    },
    {
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "format": "{{value}}%",
        "group": "group_tmc_control",
        "gtype": "gage",
        "height": 2,
        "id": "d32efdc43afea1ec",
        "label": "Volume",
        "max": "100",
        "min": 0,
        "name": "A (동↔서)",
        "order": 2,
        "seg1": "40",
        "seg2": "70",
        "title": "A (동↔서)",
        "type": "ui_gauge",
        "width": 3,
        "wires": [],
        "x": 1360,
        "y": 140,
        "z": "dee68aa0c07e4c62"
    },
    {
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "format": "{{value}}%",
        "group": "group_tmc_control",
        "gtype": "gage",
        "height": 2,
        "id": "46175ca4dd108094",
        "label": "Volume",
        "max": "100",
        "min": 0,
        "name": "B (남↔북)",
        "order": 3,
        "seg1": "40",
        "seg2": "70",
        "title": "B (남↔북)",
        "type": "ui_gauge",
        "width": 3,
        "wires": [],
        "x": 1360,
        "y": 180,
        "z": "dee68aa0c07e4c62"
    },
    {
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "format": "{{value}}%",
        "group": "group_tmc_control",
        "gtype": "gage",
        "height": 2,
        "id": "be1c32ba317ca42a",
        "label": "Volume",
        "max": "100",
        "min": 0,
        "name": "B (동↔서)",
        "order": 4,
        "seg1": "40",
        "seg2": "70",
        "title": "B (동↔서)",
        "type": "ui_gauge",
        "width": 3,
        "wires": [],
        "x": 1360,
        "y": 220,
        "z": "dee68aa0c07e4c62"
    },
    {
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "format": "{{value}}%",
        "group": "group_tmc_control",
        "gtype": "gage",
        "height": 2,
        "id": "dd4016fc5dd46543",
        "label": "Volume",
        "max": "100",
        "min": 0,
        "name": "C (남↔북)",
        "order": 5,
        "seg1": "40",
        "seg2": "70",
        "title": "C (남↔북)",
        "type": "ui_gauge",
        "width": 3,
        "wires": [],
        "x": 1360,
        "y": 260,
        "z": "dee68aa0c07e4c62"
    },
    {
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "format": "{{value}}%",
        "group": "group_tmc_control",
        "gtype": "gage",
        "height": 2,
        "id": "40ec8a5b8e9b40b1",
        "label": "Volume",
        "max": "100",
        "min": 0,
        "name": "C (동↔서)",
        "order": 6,
        "seg1": "40",
        "seg2": "70",
        "title": "C (동↔서)",
        "type": "ui_gauge",
        "width": 3,
        "wires": [],
        "x": 1360,
        "y": 300,
        "z": "dee68aa0c07e4c62"
    },
    {
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "format": "{{value}}%",
        "group": "group_tmc_control",
        "gtype": "gage",
        "height": 2,
        "id": "314fe059db67a47b",
        "label": "Volume",
        "max": "100",
        "min": 0,
        "name": "D (남↔북)",
        "order": 7,
        "seg1": "40",
        "seg2": "70",
        "title": "D (남↔북)",
        "type": "ui_gauge",
        "width": 3,
        "wires": [],
        "x": 1360,
        "y": 340,
        "z": "dee68aa0c07e4c62"
    },
    {
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "format": "{{value}}%",
        "group": "group_tmc_control",
        "gtype": "gage",
        "height": 2,
        "id": "8ee3a0e56a20d375",
        "label": "Volume",
        "max": "100",
        "min": 0,
        "name": "D (동↔서)",
        "order": 8,
        "seg1": "40",
        "seg2": "70",
        "title": "D (동↔서)",
        "type": "ui_gauge",
        "width": 3,
        "wires": [],
        "x": 1360,
        "y": 380,
        "z": "dee68aa0c07e4c62"
    },
    {
        "chartType": "line",
        "colors": [
            "#1f77b4",
            "#ff7f0e",
            "#2ca02c",
            "#d62728",
            "#9467bd",
            "#8c564b",
            "#e377c2",
            "#7f7f7f",
            "#bcbd22"
        ],
        "cutout": 0,
        "dot": false,
        "group": "group_traffic_trends",
        "height": 4,
        "id": "9478551b93ae47fc",
        "interpolate": "linear",
        "label": "A 교차로 남북 추세",
        "legend": "true",
        "name": "A NS Trend",
        "nodata": "",
        "order": 1,
        "outputs": 1,
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "type": "ui_chart",
        "useOneColor": false,
        "width": 6,
        "wires": [
            []
        ],
        "x": 1350,
        "xformat": "HH:mm:ss",
        "y": 460,
        "ymax": "100",
        "ymin": "0",
        "z": "dee68aa0c07e4c62"
    },
    {
        "chartType": "line",
        "colors": [
            "#1f77b4",
            "#ff7f0e",
            "#2ca02c",
            "#d62728",
            "#9467bd",
            "#8c564b",
            "#e377c2",
            "#7f7f7f",
            "#bcbd22"
        ],
        "cutout": 0,
        "dot": false,
        "group": "group_traffic_trends",
        "height": 4,
        "id": "31eb5358faa77077",
        "interpolate": "linear",
        "label": "A 교차로 동서 추세",
        "legend": "true",
        "name": "A EW Trend",
        "nodata": "",
        "order": 2,
        "outputs": 1,
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "type": "ui_chart",
        "useOneColor": false,
        "width": 6,
        "wires": [
            []
        ],
        "x": 1350,
        "xformat": "HH:mm:ss",
        "y": 500,
        "ymax": "100",
        "ymin": "0",
        "z": "dee68aa0c07e4c62"
    },
    {
        "chartType": "line",
        "colors": [
            "#1f77b4",
            "#ff7f0e",
            "#2ca02c",
            "#d62728",
            "#9467bd",
            "#8c564b",
            "#e377c2",
            "#7f7f7f",
            "#bcbd22"
        ],
        "cutout": 0,
        "dot": false,
        "group": "group_traffic_trends",
        "height": 4,
        "id": "7dd7a64caa59c4c5",
        "interpolate": "linear",
        "label": "B 교차로 남북 추세",
        "legend": "true",
        "name": "B NS Trend",
        "nodata": "",
        "order": 3,
        "outputs": 1,
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "type": "ui_chart",
        "useOneColor": false,
        "width": 6,
        "wires": [
            []
        ],
        "x": 1350,
        "xformat": "HH:mm:ss",
        "y": 540,
        "ymax": "100",
        "ymin": "0",
        "z": "dee68aa0c07e4c62"
    },
    {
        "chartType": "line",
        "colors": [
            "#1f77b4",
            "#ff7f0e",
            "#d62728",
            "#2ca02c",
            "#9467bd",
            "#8c564b",
            "#e377c2",
            "#7f7f7f",
            "#bcbd22"
        ],
        "cutout": 0,
        "dot": false,
        "group": "group_traffic_trends",
        "height": 4,
        "id": "c16e4a1bce1125f3",
        "interpolate": "linear",
        "label": "B 교차로 동서 추세",
        "legend": "true",
        "name": "B EW Trend",
        "nodata": "",
        "order": 4,
        "outputs": 1,
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "type": "ui_chart",
        "useOneColor": false,
        "width": 6,
        "wires": [
            []
        ],
        "x": 1350,
        "xformat": "HH:mm:ss",
        "y": 580,
        "ymax": "100",
        "ymin": "0",
        "z": "dee68aa0c07e4c62"
    },
    {
        "chartType": "line",
        "colors": [
            "#1f77b4",
            "#ff7f0e",
            "#2ca02c",
            "#d62728",
            "#9467bd",
            "#8c564b",
            "#e377c2",
            "#7f7f7f",
            "#bcbd22"
        ],
        "cutout": 0,
        "dot": false,
        "group": "group_traffic_trends",
        "height": 4,
        "id": "69c25312d7754ca4",
        "interpolate": "linear",
        "label": "C 교차로 남북 추세",
        "legend": "true",
        "name": "C NS Trend",
        "nodata": "",
        "order": 5,
        "outputs": 1,
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "type": "ui_chart",
        "useOneColor": false,
        "width": 6,
        "wires": [
            []
        ],
        "x": 1350,
        "xformat": "HH:mm:ss",
        "y": 620,
        "ymax": "100",
        "ymin": "0",
        "z": "dee68aa0c07e4c62"
    },
    {
        "chartType": "line",
        "colors": [
            "#1f77b4",
            "#ff7f0e",
            "#2ca02c",
            "#d62728",
            "#9467bd",
            "#8c564b",
            "#e377c2",
            "#7f7f7f",
            "#bcbd22"
        ],
        "cutout": 0,
        "dot": false,
        "group": "group_traffic_trends",
        "height": 4,
        "id": "b5f8bdbdb54cd929",
        "interpolate": "linear",
        "label": "C 교차로 동서 추세",
        "legend": "true",
        "name": "C EW Trend",
        "nodata": "",
        "order": 6,
        "outputs": 1,
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "type": "ui_chart",
        "useOneColor": false,
        "width": 6,
        "wires": [
            []
        ],
        "x": 1350,
        "xformat": "HH:mm:ss",
        "y": 660,
        "ymax": "100",
        "ymin": "0",
        "z": "dee68aa0c07e4c62"
    },
    {
        "chartType": "line",
        "colors": [
            "#1f77b4",
            "#ff7f0e",
            "#2ca02c",
            "#d62728",
            "#9467bd",
            "#8c564b",
            "#e377c2",
            "#7f7f7f",
            "#bcbd22"
        ],
        "cutout": 0,
        "dot": false,
        "group": "group_traffic_trends",
        "height": 4,
        "id": "493bed492d4f76fe",
        "interpolate": "linear",
        "label": "D 교차로 남북 추세",
        "legend": "true",
        "name": "D NS Trend",
        "nodata": "",
        "order": 7,
        "outputs": 1,
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "type": "ui_chart",
        "useOneColor": false,
        "width": 6,
        "wires": [
            []
        ],
        "x": 1350,
        "xformat": "HH:mm:ss",
        "y": 700,
        "ymax": "100",
        "ymin": "0",
        "z": "dee68aa0c07e4c62"
    },
    {
        "chartType": "line",
        "colors": [
            "#1f77b4",
            "#ff7f0e",
            "#2ca02c",
            "#d62728",
            "#9467bd",
            "#8c564b",
            "#e377c2",
            "#7f7f7f",
            "#bcbd22"
        ],
        "cutout": 0,
        "dot": false,
        "group": "group_traffic_trends",
        "height": 4,
        "id": "31ead39a8d44dd01",
        "interpolate": "linear",
        "label": "D 교차로 동서 추세",
        "legend": "true",
        "name": "D EW Trend",
        "nodata": "",
        "order": 8,
        "outputs": 1,
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "type": "ui_chart",
        "useOneColor": false,
        "width": 6,
        "wires": [
            []
        ],
        "x": 1350,
        "xformat": "HH:mm:ss",
        "y": 740,
        "ymax": "100",
        "ymin": "0",
        "z": "dee68aa0c07e4c62"
    },
    {
        "bgcolor": "#B73322",
        "className": "",
        "color": "#FFFFFF",
        "group": "group_emergency_control",
        "height": 1,
        "icon": "fa-ambulance",
        "id": "3635e3a724ec82ed",
        "label": "긴급차량 남↔북",
        "name": "",
        "order": 1,
        "passthru": false,
        "payload": "1",
        "payloadType": "num",
        "tooltip": "",
        "topic": "topic",
        "topicType": "msg",
        "type": "ui_button",
        "width": 4,
        "wires": [
            [
                "093834d3a2a6e16f"
            ]
        ],
        "x": 120,
        "y": 340,
        "z": "dee68aa0c07e4c62"
    },
    {
        "bgcolor": "#B73322",
        "className": "",
        "color": "#FFFFFF",
        "group": "group_emergency_control",
        "height": 1,
        "icon": "fa-ambulance",
        "id": "7ee850d66bec42c7",
        "label": "긴급차량 동↔서",
        "name": "",
        "order": 2,
        "passthru": false,
        "payload": "2",
        "payloadType": "num",
        "tooltip": "",
        "topic": "topic",
        "topicType": "msg",
        "type": "ui_button",
        "width": 4,
        "wires": [
            [
                "093834d3a2a6e16f"
            ]
        ],
        "x": 120,
        "y": 380,
        "z": "dee68aa0c07e4c62"
    },
    {
        "finalize": "",
        "func": "// === 시스템 상태 모니터링 (최종 수정 코드) ===\n\nconst status = {\n    timestamp: new Date().toISOString(),\n    traffic: {\n        avgVolume: 0,\n        congestionLevel: 'low'\n    },\n    performance: {\n        avgWaitTime: 0,\n        throughput: 0,\n        efficiency: 0\n    }\n};\n\n// msg.payload.data 에서 데이터 배열을 가져오도록 수정\nconst payloadData = msg.payload.data || [];\n\nif (Array.isArray(payloadData) && payloadData.length >= 8) {\n\n    const actualVolumes = payloadData.slice(0, 8);\n    const avgVolume = actualVolumes.reduce((a, b) => a + b, 0) / actualVolumes.length;\n\n    status.traffic.avgVolume = Math.round(avgVolume);\n\n    if (avgVolume > 0) {\n        if (avgVolume > 80) {\n            status.traffic.congestionLevel = 'high';\n        } else if (avgVolume > 50) {\n            status.traffic.congestionLevel = 'medium';\n        }\n\n        status.performance.efficiency = Math.round(100 - avgVolume * 0.4);\n        status.performance.avgWaitTime = Math.round(5 + avgVolume * 0.5);\n        status.performance.throughput = Math.round(avgVolume * 15);\n    }\n}\n\nmsg.payload = status;\nreturn msg;",
        "id": "110423e07dba0598",
        "initialize": "",
        "libs": [],
        "name": "System Status Monitor",
        "noerr": 0,
        "outputs": 1,
        "timeout": "",
        "type": "function",
        "wires": [
            [
                "310d8ce40f3428d3"
            ]
        ],
        "x": 460,
        "y": 400,
        "z": "dee68aa0c07e4c62"
    },
    {
        "className": "",
        "format": "<div style=\"padding: 5px; display: flex; justify-content: space-around; align-items: center; width: 100%; font-size: 0.9em;\">\n    <span>📅 <b>Time:</b> {{msg.payload.timestamp | date:'yyyy-MM-dd HH:mm:ss'}}</span>\n    <span>🚦 <b>평균 교통량:</b> {{msg.payload.traffic.avgVolume}}%</span>\n    <span>⚡ <b>혼잡도:</b> {{msg.payload.traffic.congestionLevel}}</span>\n    <span>⏱️ <b>평균 대기시간:</b> {{msg.payload.performance.avgWaitTime}}초</span>\n    <span>📊 <b>효율성:</b> {{msg.payload.performance.efficiency}}%</span>\n    <span>🚗 <b>처리량:</b> {{msg.payload.performance.throughput}} 대/시간</span>\n</div>",
        "group": "group_tmc_control",
        "height": 1,
        "id": "310d8ce40f3428d3",
        "label": "",
        "layout": "col-center",
        "name": "",
        "order": 9,
        "type": "ui_text",
        "width": 24,
        "wires": [],
        "x": 690,
        "y": 400,
        "z": "dee68aa0c07e4c62"
    },
    {
        "adr": "0",
        "dataType": "Coil",
        "delayOnStart": false,
        "emptyMsgOnFail": false,
        "enableDeformedMessages": false,
        "id": "5507dd2cf4cfd7dc",
        "ioFile": "",
        "logIOActivities": false,
        "name": "Read PLC A Coils",
        "quantity": "12",
        "rate": "1",
        "rateUnit": "s",
        "server": "002416d95ed618bb",
        "showErrors": false,
        "showStatusActivities": false,
        "showWarnings": true,
        "startDelayTime": "",
        "topic": "",
        "type": "modbus-read",
        "unitid": "",
        "useIOFile": false,
        "useIOForPayload": false,
        "wires": [
            [
                "281ec85fac6d3ca6"
            ],
            []
        ],
        "x": 150,
        "y": 720,
        "z": "dee68aa0c07e4c62"
    },
    {
        "adr": "0",
        "dataType": "Coil",
        "delayOnStart": false,
        "emptyMsgOnFail": false,
        "enableDeformedMessages": false,
        "id": "529be6ae4d8be354",
        "ioFile": "",
        "logIOActivities": false,
        "name": "Read PLC B Coils",
        "quantity": "12",
        "rate": "1",
        "rateUnit": "s",
        "server": "86497a2f59dbf570",
        "showErrors": false,
        "showStatusActivities": false,
        "showWarnings": true,
        "startDelayTime": "",
        "topic": "",
        "type": "modbus-read",
        "unitid": "",
        "useIOFile": false,
        "useIOForPayload": false,
        "wires": [
            [
                "fc1f55032141dbd9"
            ],
            []
        ],
        "x": 150,
        "y": 780,
        "z": "dee68aa0c07e4c62"
    },
    {
        "adr": "0",
        "dataType": "Coil",
        "delayOnStart": false,
        "emptyMsgOnFail": false,
        "enableDeformedMessages": false,
        "id": "375f9cf8e1eb6a8c",
        "ioFile": "",
        "logIOActivities": false,
        "name": "Read PLC C Coils",
        "quantity": "12",
        "rate": "1",
        "rateUnit": "s",
        "server": "946a34dccba15f97",
        "showErrors": false,
        "showStatusActivities": false,
        "showWarnings": true,
        "startDelayTime": "",
        "topic": "",
        "type": "modbus-read",
        "unitid": "",
        "useIOFile": false,
        "useIOForPayload": false,
        "wires": [
            [
                "f156ea2ea8f9feef"
            ],
            []
        ],
        "x": 150,
        "y": 840,
        "z": "dee68aa0c07e4c62"
    },
    {
        "adr": "0",
        "dataType": "Coil",
        "delayOnStart": false,
        "emptyMsgOnFail": false,
        "enableDeformedMessages": false,
        "id": "9f45f5e0a5a306e1",
        "ioFile": "",
        "logIOActivities": false,
        "name": "Read PLC D Coils",
        "quantity": "12",
        "rate": "1",
        "rateUnit": "s",
        "server": "282a9bdec27cff20",
        "showErrors": false,
        "showStatusActivities": false,
        "showWarnings": true,
        "startDelayTime": "",
        "topic": "",
        "type": "modbus-read",
        "unitid": "",
        "useIOFile": false,
        "useIOForPayload": false,
        "wires": [
            [
                "c26e0ee4e290f826"
            ],
            []
        ],
        "x": 150,
        "y": 900,
        "z": "dee68aa0c07e4c62"
    },
    {
        "finalize": "",
        "func": "let contextNS = flow.get('intersection_A_data_NS') || { wasGreen: false, startTime: Date.now() };\nlet contextEW = flow.get('intersection_A_data_EW') || { wasGreen: false, startTime: Date.now() };\n\nconst plcData = msg.payload;\n\nif (!Array.isArray(plcData) || plcData.length < 12) {\n    node.warn(\"PLC lamp data is invalid or too short.\");\n    return null;\n}\n\nconst l = plcData.map(val => val ? 1 : 0);\n\n// South(l[2])/North(l[8]) are NS, East(l[5])/West(l[11]) are EW\nconst isGreenNS = (l[2] === 1 || l[8] === 1);\nconst isGreenEW = (l[5] === 1 || l[11] === 1);\n\n// --- Calculate NS Timer ---\nlet calculatedTimerNS = 0;\nif (!contextNS.wasGreen && isGreenNS) {\n    contextNS.startTime = Date.now();\n    calculatedTimerNS = 0;\n} else if (contextNS.wasGreen && isGreenNS) {\n    const elapsedTime = Date.now() - contextNS.startTime;\n    calculatedTimerNS = Math.floor(elapsedTime / 1000);\n}\n\n// --- Calculate EW Timer ---\nlet calculatedTimerEW = 0;\nif (!contextEW.wasGreen && isGreenEW) {\n    contextEW.startTime = Date.now();\n    calculatedTimerEW = 0;\n} else if (contextEW.wasGreen && isGreenEW) {\n    const elapsedTime = Date.now() - contextEW.startTime;\n    calculatedTimerEW = Math.floor(elapsedTime / 1000);\n}\n\n// Store current state for next execution\ncontextNS.wasGreen = isGreenNS;\ncontextEW.wasGreen = isGreenEW;\nflow.set('intersection_A_data_NS', contextNS);\nflow.set('intersection_A_data_EW', contextEW);\n\n// --- Create messages for UI ---\nconst lampMsg1 = { payload: { r: l[0], y: l[1], g: l[2] } }; // South\nconst lampMsg2 = { payload: { r: l[3], y: l[4], g: l[5] } }; // East\nconst lampMsg3 = { payload: { r: l[6], y: l[7], g: l[8] } }; // North\nconst lampMsg4 = { payload: { r: l[9], y: l[10], g: l[11] } }; // West\n\nconst timerMsgNS = { payload: calculatedTimerNS };\nconst timerMsgEW = { payload: calculatedTimerEW };\n\nreturn [lampMsg1, lampMsg2, lampMsg3, lampMsg4, timerMsgNS, timerMsgEW];",
        "id": "281ec85fac6d3ca6",
        "initialize": "",
        "libs": [],
        "name": "Process PLC A Data",
        "noerr": 0,
        "outputs": 6,
        "timeout": "",
        "type": "function",
        "wires": [
            [
                "a6479cc9b4013e56"
            ],
            [
                "2abf29966346a4a1"
            ],
            [
                "44d3d5a1a576312c"
            ],
            [
                "e596887c1b6a5b45"
            ],
            [
                "d7269ed51651ddb6",
                "6c0b272f7162bc2e"
            ],
            [
                "0aef3686c939f96f",
                "c75d7dca645bc566"
            ]
        ],
        "x": 620,
        "y": 960,
        "z": "dee68aa0c07e4c62"
    },
    {
        "finalize": "",
        "func": "let contextNS = flow.get('intersection_B_data_NS') || { wasGreen: false, startTime: Date.now() };\nlet contextEW = flow.get('intersection_B_data_EW') || { wasGreen: false, startTime: Date.now() };\n\nconst plcData = msg.payload;\n\nif (!Array.isArray(plcData) || plcData.length < 12) {\n    node.warn(\"PLC lamp data is invalid or too short.\");\n    return null;\n}\n\nconst l = plcData.map(val => val ? 1 : 0);\n\n// South(l[2])/North(l[8]) are NS, East(l[5])/West(l[11]) are EW\nconst isGreenNS = (l[2] === 1 || l[8] === 1);\nconst isGreenEW = (l[5] === 1 || l[11] === 1);\n\n// --- Calculate NS Timer ---\nlet calculatedTimerNS = 0;\nif (!contextNS.wasGreen && isGreenNS) {\n    contextNS.startTime = Date.now();\n    calculatedTimerNS = 0;\n} else if (contextNS.wasGreen && isGreenNS) {\n    const elapsedTime = Date.now() - contextNS.startTime;\n    calculatedTimerNS = Math.floor(elapsedTime / 1000);\n}\n\n// --- Calculate EW Timer ---\nlet calculatedTimerEW = 0;\nif (!contextEW.wasGreen && isGreenEW) {\n    contextEW.startTime = Date.now();\n    calculatedTimerEW = 0;\n} else if (contextEW.wasGreen && isGreenEW) {\n    const elapsedTime = Date.now() - contextEW.startTime;\n    calculatedTimerEW = Math.floor(elapsedTime / 1000);\n}\n\n// Store current state for next execution\ncontextNS.wasGreen = isGreenNS;\ncontextEW.wasGreen = isGreenEW;\nflow.set('intersection_B_data_NS', contextNS);\nflow.set('intersection_B_data_EW', contextEW);\n\n// --- Create messages for UI ---\nconst lampMsg1 = { payload: { r: l[0], y: l[1], g: l[2] } }; // South\nconst lampMsg2 = { payload: { r: l[3], y: l[4], g: l[5] } }; // East\nconst lampMsg3 = { payload: { r: l[6], y: l[7], g: l[8] } }; // North\nconst lampMsg4 = { payload: { r: l[9], y: l[10], g: l[11] } }; // West\n\nconst timerMsgNS = { payload: calculatedTimerNS };\nconst timerMsgEW = { payload: calculatedTimerEW };\n\nreturn [lampMsg1, lampMsg2, lampMsg3, lampMsg4, timerMsgNS, timerMsgEW];",
        "id": "fc1f55032141dbd9",
        "initialize": "",
        "libs": [],
        "name": "Process PLC B Data",
        "noerr": 0,
        "outputs": 6,
        "timeout": "",
        "type": "function",
        "wires": [
            [
                "9a048ca60583efe1"
            ],
            [
                "10e0be185bdfb22a"
            ],
            [
                "7f56603b9d11f432"
            ],
            [
                "0f3b052713c5a109"
            ],
            [
                "b87bbd73fddbdbd8",
                "408619d9673cd7ba"
            ],
            [
                "722d642851a02237",
                "eb76d62d7df730b1"
            ]
        ],
        "x": 620,
        "y": 1060,
        "z": "dee68aa0c07e4c62"
    },
    {
        "finalize": "",
        "func": "let contextNS = flow.get('intersection_C_data_NS') || { wasGreen: false, startTime: Date.now() };\nlet contextEW = flow.get('intersection_C_data_EW') || { wasGreen: false, startTime: Date.now() };\n\nconst plcData = msg.payload;\n\nif (!Array.isArray(plcData) || plcData.length < 12) {\n    node.warn(\"PLC lamp data is invalid or too short.\");\n    return null;\n}\n\nconst l = plcData.map(val => val ? 1 : 0);\n\n// South(l[2])/North(l[8]) are NS, East(l[5])/West(l[11]) are EW\nconst isGreenNS = (l[2] === 1 || l[8] === 1);\nconst isGreenEW = (l[5] === 1 || l[11] === 1);\n\n// --- Calculate NS Timer ---\nlet calculatedTimerNS = 0;\nif (!contextNS.wasGreen && isGreenNS) {\n    contextNS.startTime = Date.now();\n    calculatedTimerNS = 0;\n} else if (contextNS.wasGreen && isGreenNS) {\n    const elapsedTime = Date.now() - contextNS.startTime;\n    calculatedTimerNS = Math.floor(elapsedTime / 1000);\n}\n\n// --- Calculate EW Timer ---\nlet calculatedTimerEW = 0;\nif (!contextEW.wasGreen && isGreenEW) {\n    contextEW.startTime = Date.now();\n    calculatedTimerEW = 0;\n} else if (contextEW.wasGreen && isGreenEW) {\n    const elapsedTime = Date.now() - contextEW.startTime;\n    calculatedTimerEW = Math.floor(elapsedTime / 1000);\n}\n\n// Store current state for next execution\ncontextNS.wasGreen = isGreenNS;\ncontextEW.wasGreen = isGreenEW;\nflow.set('intersection_C_data_NS', contextNS);\nflow.set('intersection_C_data_EW', contextEW);\n\n// --- Create messages for UI ---\nconst lampMsg1 = { payload: { r: l[0], y: l[1], g: l[2] } }; // South\nconst lampMsg2 = { payload: { r: l[3], y: l[4], g: l[5] } }; // East\nconst lampMsg3 = { payload: { r: l[6], y: l[7], g: l[8] } }; // North\nconst lampMsg4 = { payload: { r: l[9], y: l[10], g: l[11] } }; // West\n\nconst timerMsgNS = { payload: calculatedTimerNS };\nconst timerMsgEW = { payload: calculatedTimerEW };\n\nreturn [lampMsg1, lampMsg2, lampMsg3, lampMsg4, timerMsgNS, timerMsgEW];",
        "id": "f156ea2ea8f9feef",
        "initialize": "",
        "libs": [],
        "name": "Process PLC C Data",
        "noerr": 0,
        "outputs": 6,
        "timeout": "",
        "type": "function",
        "wires": [
            [
                "58a36292760e10e5"
            ],
            [
                "e9854ca38e3931d2"
            ],
            [
                "f97c33c29672a15a"
            ],
            [
                "f8263d917d5d1358"
            ],
            [
                "771639f0b2b32947",
                "acad591496809861"
            ],
            [
                "fd211c9e070fa142",
                "d879f0534c8e59b4"
            ]
        ],
        "x": 620,
        "y": 1160,
        "z": "dee68aa0c07e4c62"
    },
    {
        "finalize": "",
        "func": "let contextNS = flow.get('intersection_D_data_NS') || { wasGreen: false, startTime: Date.now() };\nlet contextEW = flow.get('intersection_D_data_EW') || { wasGreen: false, startTime: Date.now() };\n\nconst plcData = msg.payload;\n\nif (!Array.isArray(plcData) || plcData.length < 12) {\n    node.warn(\"PLC lamp data is invalid or too short.\");\n    return null;\n}\n\nconst l = plcData.map(val => val ? 1 : 0);\n\n// South(l[2])/North(l[8]) are NS, East(l[5])/West(l[11]) are EW\nconst isGreenNS = (l[2] === 1 || l[8] === 1);\nconst isGreenEW = (l[5] === 1 || l[11] === 1);\n\n// --- Calculate NS Timer ---\nlet calculatedTimerNS = 0;\nif (!contextNS.wasGreen && isGreenNS) {\n    contextNS.startTime = Date.now();\n    calculatedTimerNS = 0;\n} else if (contextNS.wasGreen && isGreenNS) {\n    const elapsedTime = Date.now() - contextNS.startTime;\n    calculatedTimerNS = Math.floor(elapsedTime / 1000);\n}\n\n// --- Calculate EW Timer ---\nlet calculatedTimerEW = 0;\nif (!contextEW.wasGreen && isGreenEW) {\n    contextEW.startTime = Date.now();\n    calculatedTimerEW = 0;\n} else if (contextEW.wasGreen && isGreenEW) {\n    const elapsedTime = Date.now() - contextEW.startTime;\n    calculatedTimerEW = Math.floor(elapsedTime / 1000);\n}\n\n// Store current state for next execution\ncontextNS.wasGreen = isGreenNS;\ncontextEW.wasGreen = isGreenEW;\nflow.set('intersection_D_data_NS', contextNS);\nflow.set('intersection_D_data_EW', contextEW);\n\n// --- Create messages for UI ---\nconst lampMsg1 = { payload: { r: l[0], y: l[1], g: l[2] } }; // South\nconst lampMsg2 = { payload: { r: l[3], y: l[4], g: l[5] } }; // East\nconst lampMsg3 = { payload: { r: l[6], y: l[7], g: l[8] } }; // North\nconst lampMsg4 = { payload: { r: l[9], y: l[10], g: l[11] } }; // West\n\nconst timerMsgNS = { payload: calculatedTimerNS };\nconst timerMsgEW = { payload: calculatedTimerEW };\n\nreturn [lampMsg1, lampMsg2, lampMsg3, lampMsg4, timerMsgNS, timerMsgEW];",
        "id": "c26e0ee4e290f826",
        "initialize": "",
        "libs": [],
        "name": "Process PLC D Data",
        "noerr": 0,
        "outputs": 6,
        "timeout": "",
        "type": "function",
        "wires": [
            [
                "e88a0be821975599"
            ],
            [
                "2db686d5361a6c71"
            ],
            [
                "00a77946432e50f2"
            ],
            [
                "a8dba15a55818de7"
            ],
            [
                "6104f0fa5b971a96",
                "81ea1ea3ce029d49"
            ],
            [
                "d6455d0a1f56ff49",
                "d6db03f9b8f5812b"
            ]
        ],
        "x": 620,
        "y": 1260,
        "z": "dee68aa0c07e4c62"
    },
    {
        "className": "",
        "format": "<div style=\"display: flex; flex-direction: column; align-items: center; justify-content: center; height: 100%;\">\n    <p style=\"margin: 0 0 5px 0; font-size: 14px; font-weight: bold;\">남쪽</p>\n    <div style=\"padding: 5px; background-color:#333; border-radius: 10px; width: 38px;\">\n        <div\n            style=\"height: 28px; width: 28px; border-radius: 50%; background-color: {{msg.payload.r ? 'red' : '#555'}}; border: 1px solid #666; margin: 3px auto;\">\n        </div>\n        <div\n            style=\"height: 28px; width: 28px; border-radius: 50%; background-color: {{msg.payload.y ? 'yellow' : '#555'}}; border: 1px solid #666; margin: 3px auto;\">\n        </div>\n        <div\n            style=\"height: 28px; width: 28px; border-radius: 50%; background-color: {{msg.payload.g ? 'lime' : '#555'}}; border: 1px solid #666; margin: 3px auto;\">\n        </div>\n    </div>\n</div>",
        "fwdInMessages": true,
        "group": "group_intersection_a",
        "height": 3,
        "id": "a6479cc9b4013e56",
        "name": "남쪽",
        "order": 1,
        "resendOnRefresh": false,
        "storeOutMessages": true,
        "templateScope": "local",
        "type": "ui_template",
        "width": 2,
        "wires": [
            []
        ],
        "x": 1030,
        "y": 1340,
        "z": "dee68aa0c07e4c62"
    },
    {
        "className": "",
        "format": "<div style=\"display: flex; flex-direction: column; align-items: center; justify-content: center; height: 100%;\">\n    <p style=\"margin: 0 0 5px 0; font-size: 14px; font-weight: bold;\">동쪽</p>\n    <div style=\"padding: 5px; background-color:#333; border-radius: 10px; width: 38px;\">\n        <div\n            style=\"height: 28px; width: 28px; border-radius: 50%; background-color: {{msg.payload.r ? 'red' : '#555'}}; border: 1px solid #666; margin: 3px auto;\">\n        </div>\n        <div\n            style=\"height: 28px; width: 28px; border-radius: 50%; background-color: {{msg.payload.y ? 'yellow' : '#555'}}; border: 1px solid #666; margin: 3px auto;\">\n        </div>\n        <div\n            style=\"height: 28px; width: 28px; border-radius: 50%; background-color: {{msg.payload.g ? 'lime' : '#555'}}; border: 1px solid #666; margin: 3px auto;\">\n        </div>\n    </div>\n</div>",
        "fwdInMessages": true,
        "group": "group_intersection_a",
        "height": 3,
        "id": "2abf29966346a4a1",
        "name": "동쪽",
        "order": 2,
        "resendOnRefresh": false,
        "storeOutMessages": true,
        "templateScope": "local",
        "type": "ui_template",
        "width": 2,
        "wires": [
            []
        ],
        "x": 1030,
        "y": 1380,
        "z": "dee68aa0c07e4c62"
    },
    {
        "className": "",
        "format": "<div style=\"display: flex; flex-direction: column; align-items: center; justify-content: center; height: 100%;\">\n    <p style=\"margin: 0 0 5px 0; font-size: 14px; font-weight: bold;\">북쪽</p>\n    <div style=\"padding: 5px; background-color:#333; border-radius: 10px; width: 38px;\">\n        <div\n            style=\"height: 28px; width: 28px; border-radius: 50%; background-color: {{msg.payload.r ? 'red' : '#555'}}; border: 1px solid #666; margin: 3px auto;\">\n        </div>\n        <div\n            style=\"height: 28px; width: 28px; border-radius: 50%; background-color: {{msg.payload.y ? 'yellow' : '#555'}}; border: 1px solid #666; margin: 3px auto;\">\n        </div>\n        <div\n            style=\"height: 28px; width: 28px; border-radius: 50%; background-color: {{msg.payload.g ? 'lime' : '#555'}}; border: 1px solid #666; margin: 3px auto;\">\n        </div>\n    </div>\n</div>",
        "fwdInMessages": true,
        "group": "group_intersection_a",
        "height": 3,
        "id": "44d3d5a1a576312c",
        "name": "북쪽",
        "order": 3,
        "resendOnRefresh": false,
        "storeOutMessages": true,
        "templateScope": "local",
        "type": "ui_template",
        "width": 2,
        "wires": [
            []
        ],
        "x": 1030,
        "y": 1420,
        "z": "dee68aa0c07e4c62"
    },
    {
        "className": "",
        "format": "<div style=\"display: flex; flex-direction: column; align-items: center; justify-content: center; height: 100%;\">\n    <p style=\"margin: 0 0 5px 0; font-size: 14px; font-weight: bold;\">서쪽</p>\n    <div style=\"padding: 5px; background-color:#333; border-radius: 10px; width: 38px;\">\n        <div\n            style=\"height: 28px; width: 28px; border-radius: 50%; background-color: {{msg.payload.r ? 'red' : '#555'}}; border: 1px solid #666; margin: 3px auto;\">\n        </div>\n        <div\n            style=\"height: 28px; width: 28px; border-radius: 50%; background-color: {{msg.payload.y ? 'yellow' : '#555'}}; border: 1px solid #666; margin: 3px auto;\">\n        </div>\n        <div\n            style=\"height: 28px; width: 28px; border-radius: 50%; background-color: {{msg.payload.g ? 'lime' : '#555'}}; border: 1px solid #666; margin: 3px auto;\">\n        </div>\n    </div>\n</div>",
        "fwdInMessages": true,
        "group": "group_intersection_a",
        "height": 3,
        "id": "e596887c1b6a5b45",
        "name": "서쪽",
        "order": 4,
        "resendOnRefresh": false,
        "storeOutMessages": true,
        "templateScope": "local",
        "type": "ui_template",
        "width": 2,
        "wires": [
            []
        ],
        "x": 1030,
        "y": 1460,
        "z": "dee68aa0c07e4c62"
    },
    {
        "group": "group_intersection_a",
        "height": 1,
        "id": "9d0ce51e44b838d2",
        "label": "운전 모드",
        "name": "운전 모드",
        "options": [
            {
                "label": "일반 주기",
                "type": "num",
                "value": 1
            },
            {
                "label": "심야 점멸",
                "type": "num",
                "value": 2
            },
            {
                "label": "전체 적색",
                "type": "num",
                "value": 3
            }
        ],
        "order": 8,
        "passthru": true,
        "payload": "",
        "topic": "topic",
        "type": "ui_dropdown",
        "width": 8,
        "wires": [
            [
                "7916bb7ff97efe86"
            ]
        ],
        "x": 120,
        "y": 1240,
        "z": "dee68aa0c07e4c62"
    },
    {
        "adr": "0",
        "dataType": "HoldingRegister",
        "delayOnStart": false,
        "emptyMsgOnFail": false,
        "id": "7916bb7ff97efe86",
        "keepMsgProperties": false,
        "name": "Write Mode A",
        "quantity": "1",
        "server": "002416d95ed618bb",
        "showErrors": false,
        "showStatusActivities": false,
        "showWarnings": true,
        "startDelayTime": "",
        "type": "modbus-write",
        "unitid": "",
        "wires": [
            [],
            []
        ],
        "x": 360,
        "y": 1240,
        "z": "dee68aa0c07e4c62"
    },
    {
        "className": "",
        "format": "<div style=\"display: flex; flex-direction: column; align-items: center; justify-content: center; height: 100%;\">\n    <p style=\"margin: 0 0 5px 0; font-size: 14px; font-weight: bold;\">남쪽</p>\n    <div style=\"padding: 5px; background-color:#333; border-radius: 10px; width: 38px;\">\n        <div\n            style=\"height: 28px; width: 28px; border-radius: 50%; background-color: {{msg.payload.r ? 'red' : '#555'}}; border: 1px solid #666; margin: 3px auto;\">\n        </div>\n        <div\n            style=\"height: 28px; width: 28px; border-radius: 50%; background-color: {{msg.payload.y ? 'yellow' : '#555'}}; border: 1px solid #666; margin: 3px auto;\">\n        </div>\n        <div\n            style=\"height: 28px; width: 28px; border-radius: 50%; background-color: {{msg.payload.g ? 'lime' : '#555'}}; border: 1px solid #666; margin: 3px auto;\">\n        </div>\n    </div>\n</div>",
        "fwdInMessages": true,
        "group": "group_intersection_b",
        "height": 3,
        "id": "9a048ca60583efe1",
        "name": "남쪽",
        "order": 1,
        "resendOnRefresh": false,
        "storeOutMessages": true,
        "templateScope": "local",
        "type": "ui_template",
        "width": 2,
        "wires": [
            []
        ],
        "x": 1030,
        "y": 1520,
        "z": "dee68aa0c07e4c62"
    },
    {
        "className": "",
        "format": "<div style=\"display: flex; flex-direction: column; align-items: center; justify-content: center; height: 100%;\">\n    <p style=\"margin: 0 0 5px 0; font-size: 14px; font-weight: bold;\">동쪽</p>\n    <div style=\"padding: 5px; background-color:#333; border-radius: 10px; width: 38px;\">\n        <div\n            style=\"height: 28px; width: 28px; border-radius: 50%; background-color: {{msg.payload.r ? 'red' : '#555'}}; border: 1px solid #666; margin: 3px auto;\">\n        </div>\n        <div\n            style=\"height: 28px; width: 28px; border-radius: 50%; background-color: {{msg.payload.y ? 'yellow' : '#555'}}; border: 1px solid #666; margin: 3px auto;\">\n        </div>\n        <div\n            style=\"height: 28px; width: 28px; border-radius: 50%; background-color: {{msg.payload.g ? 'lime' : '#555'}}; border: 1px solid #666; margin: 3px auto;\">\n        </div>\n    </div>\n</div>",
        "fwdInMessages": true,
        "group": "group_intersection_b",
        "height": 3,
        "id": "10e0be185bdfb22a",
        "name": "동쪽",
        "order": 2,
        "resendOnRefresh": false,
        "storeOutMessages": true,
        "templateScope": "local",
        "type": "ui_template",
        "width": 2,
        "wires": [
            []
        ],
        "x": 1030,
        "y": 1560,
        "z": "dee68aa0c07e4c62"
    },
    {
        "className": "",
        "format": "<div style=\"display: flex; flex-direction: column; align-items: center; justify-content: center; height: 100%;\">\n    <p style=\"margin: 0 0 5px 0; font-size: 14px; font-weight: bold;\">북쪽</p>\n    <div style=\"padding: 5px; background-color:#333; border-radius: 10px; width: 38px;\">\n        <div\n            style=\"height: 28px; width: 28px; border-radius: 50%; background-color: {{msg.payload.r ? 'red' : '#555'}}; border: 1px solid #666; margin: 3px auto;\">\n        </div>\n        <div\n            style=\"height: 28px; width: 28px; border-radius: 50%; background-color: {{msg.payload.y ? 'yellow' : '#555'}}; border: 1px solid #666; margin: 3px auto;\">\n        </div>\n        <div\n            style=\"height: 28px; width: 28px; border-radius: 50%; background-color: {{msg.payload.g ? 'lime' : '#555'}}; border: 1px solid #666; margin: 3px auto;\">\n        </div>\n    </div>\n</div>",
        "fwdInMessages": true,
        "group": "group_intersection_b",
        "height": 3,
        "id": "7f56603b9d11f432",
        "name": "북쪽",
        "order": 3,
        "resendOnRefresh": false,
        "storeOutMessages": true,
        "templateScope": "local",
        "type": "ui_template",
        "width": 2,
        "wires": [
            []
        ],
        "x": 1030,
        "y": 1600,
        "z": "dee68aa0c07e4c62"
    },
    {
        "className": "",
        "format": "<div style=\"display: flex; flex-direction: column; align-items: center; justify-content: center; height: 100%;\">\n    <p style=\"margin: 0 0 5px 0; font-size: 14px; font-weight: bold;\">서쪽</p>\n    <div style=\"padding: 5px; background-color:#333; border-radius: 10px; width: 38px;\">\n        <div\n            style=\"height: 28px; width: 28px; border-radius: 50%; background-color: {{msg.payload.r ? 'red' : '#555'}}; border: 1px solid #666; margin: 3px auto;\">\n        </div>\n        <div\n            style=\"height: 28px; width: 28px; border-radius: 50%; background-color: {{msg.payload.y ? 'yellow' : '#555'}}; border: 1px solid #666; margin: 3px auto;\">\n        </div>\n        <div\n            style=\"height: 28px; width: 28px; border-radius: 50%; background-color: {{msg.payload.g ? 'lime' : '#555'}}; border: 1px solid #666; margin: 3px auto;\">\n        </div>\n    </div>\n</div>",
        "fwdInMessages": true,
        "group": "group_intersection_b",
        "height": 3,
        "id": "0f3b052713c5a109",
        "name": "서쪽",
        "order": 4,
        "resendOnRefresh": false,
        "storeOutMessages": true,
        "templateScope": "local",
        "type": "ui_template",
        "width": 2,
        "wires": [
            []
        ],
        "x": 1030,
        "y": 1640,
        "z": "dee68aa0c07e4c62"
    },
    {
        "group": "group_intersection_b",
        "height": 1,
        "id": "ee5133310b21c132",
        "label": "운전 모드",
        "name": "운전 모드",
        "options": [
            {
                "label": "일반 주기",
                "type": "num",
                "value": 1
            },
            {
                "label": "심야 점멸",
                "type": "num",
                "value": 2
            },
            {
                "label": "전체 적색",
                "type": "num",
                "value": 3
            }
        ],
        "order": 8,
        "passthru": true,
        "payload": "",
        "topic": "topic",
        "type": "ui_dropdown",
        "width": 8,
        "wires": [
            [
                "65bf579875c482e4"
            ]
        ],
        "x": 120,
        "y": 1300,
        "z": "dee68aa0c07e4c62"
    },
    {
        "adr": "0",
        "dataType": "HoldingRegister",
        "delayOnStart": false,
        "emptyMsgOnFail": false,
        "id": "65bf579875c482e4",
        "keepMsgProperties": false,
        "name": "Write Mode B",
        "quantity": "1",
        "server": "86497a2f59dbf570",
        "showErrors": false,
        "showStatusActivities": false,
        "showWarnings": true,
        "startDelayTime": "",
        "type": "modbus-write",
        "unitid": "",
        "wires": [
            [],
            []
        ],
        "x": 360,
        "y": 1300,
        "z": "dee68aa0c07e4c62"
    },
    {
        "className": "",
        "format": "<div style=\"display: flex; flex-direction: column; align-items: center; justify-content: center; height: 100%;\">\n    <p style=\"margin: 0 0 5px 0; font-size: 14px; font-weight: bold;\">남쪽</p>\n    <div style=\"padding: 5px; background-color:#333; border-radius: 10px; width: 38px;\">\n        <div\n            style=\"height: 28px; width: 28px; border-radius: 50%; background-color: {{msg.payload.r ? 'red' : '#555'}}; border: 1px solid #666; margin: 3px auto;\">\n        </div>\n        <div\n            style=\"height: 28px; width: 28px; border-radius: 50%; background-color: {{msg.payload.y ? 'yellow' : '#555'}}; border: 1px solid #666; margin: 3px auto;\">\n        </div>\n        <div\n            style=\"height: 28px; width: 28px; border-radius: 50%; background-color: {{msg.payload.g ? 'lime' : '#555'}}; border: 1px solid #666; margin: 3px auto;\">\n        </div>\n    </div>\n</div>",
        "fwdInMessages": true,
        "group": "group_intersection_c",
        "height": 3,
        "id": "58a36292760e10e5",
        "name": "남쪽",
        "order": 1,
        "resendOnRefresh": false,
        "storeOutMessages": true,
        "templateScope": "local",
        "type": "ui_template",
        "width": 2,
        "wires": [
            []
        ],
        "x": 1030,
        "y": 1700,
        "z": "dee68aa0c07e4c62"
    },
    {
        "className": "",
        "format": "<div style=\"display: flex; flex-direction: column; align-items: center; justify-content: center; height: 100%;\">\n    <p style=\"margin: 0 0 5px 0; font-size: 14px; font-weight: bold;\">동쪽</p>\n    <div style=\"padding: 5px; background-color:#333; border-radius: 10px; width: 38px;\">\n        <div\n            style=\"height: 28px; width: 28px; border-radius: 50%; background-color: {{msg.payload.r ? 'red' : '#555'}}; border: 1px solid #666; margin: 3px auto;\">\n        </div>\n        <div\n            style=\"height: 28px; width: 28px; border-radius: 50%; background-color: {{msg.payload.y ? 'yellow' : '#555'}}; border: 1px solid #666; margin: 3px auto;\">\n        </div>\n        <div\n            style=\"height: 28px; width: 28px; border-radius: 50%; background-color: {{msg.payload.g ? 'lime' : '#555'}}; border: 1px solid #666; margin: 3px auto;\">\n        </div>\n    </div>\n</div>",
        "fwdInMessages": true,
        "group": "group_intersection_c",
        "height": 3,
        "id": "e9854ca38e3931d2",
        "name": "동쪽",
        "order": 2,
        "resendOnRefresh": false,
        "storeOutMessages": true,
        "templateScope": "local",
        "type": "ui_template",
        "width": 2,
        "wires": [
            []
        ],
        "x": 1030,
        "y": 1740,
        "z": "dee68aa0c07e4c62"
    },
    {
        "className": "",
        "format": "<div style=\"display: flex; flex-direction: column; align-items: center; justify-content: center; height: 100%;\">\n    <p style=\"margin: 0 0 5px 0; font-size: 14px; font-weight: bold;\">북쪽</p>\n    <div style=\"padding: 5px; background-color:#333; border-radius: 10px; width: 38px;\">\n        <div\n            style=\"height: 28px; width: 28px; border-radius: 50%; background-color: {{msg.payload.r ? 'red' : '#555'}}; border: 1px solid #666; margin: 3px auto;\">\n        </div>\n        <div\n            style=\"height: 28px; width: 28px; border-radius: 50%; background-color: {{msg.payload.y ? 'yellow' : '#555'}}; border: 1px solid #666; margin: 3px auto;\">\n        </div>\n        <div\n            style=\"height: 28px; width: 28px; border-radius: 50%; background-color: {{msg.payload.g ? 'lime' : '#555'}}; border: 1px solid #666; margin: 3px auto;\">\n        </div>\n    </div>\n</div>",
        "fwdInMessages": true,
        "group": "group_intersection_c",
        "height": 3,
        "id": "f97c33c29672a15a",
        "name": "북쪽",
        "order": 3,
        "resendOnRefresh": false,
        "storeOutMessages": true,
        "templateScope": "local",
        "type": "ui_template",
        "width": 2,
        "wires": [
            []
        ],
        "x": 1030,
        "y": 1780,
        "z": "dee68aa0c07e4c62"
    },
    {
        "className": "",
        "format": "<div style=\"display: flex; flex-direction: column; align-items: center; justify-content: center; height: 100%;\">\n    <p style=\"margin: 0 0 5px 0; font-size: 14px; font-weight: bold;\">서쪽</p>\n    <div style=\"padding: 5px; background-color:#333; border-radius: 10px; width: 38px;\">\n        <div\n            style=\"height: 28px; width: 28px; border-radius: 50%; background-color: {{msg.payload.r ? 'red' : '#555'}}; border: 1px solid #666; margin: 3px auto;\">\n        </div>\n        <div\n            style=\"height: 28px; width: 28px; border-radius: 50%; background-color: {{msg.payload.y ? 'yellow' : '#555'}}; border: 1px solid #666; margin: 3px auto;\">\n        </div>\n        <div\n            style=\"height: 28px; width: 28px; border-radius: 50%; background-color: {{msg.payload.g ? 'lime' : '#555'}}; border: 1px solid #666; margin: 3px auto;\">\n        </div>\n    </div>\n</div>",
        "fwdInMessages": true,
        "group": "group_intersection_c",
        "height": 3,
        "id": "f8263d917d5d1358",
        "name": "서쪽",
        "order": 4,
        "resendOnRefresh": false,
        "storeOutMessages": true,
        "templateScope": "local",
        "type": "ui_template",
        "width": 2,
        "wires": [
            []
        ],
        "x": 1030,
        "y": 1820,
        "z": "dee68aa0c07e4c62"
    },
    {
        "group": "group_intersection_c",
        "height": 1,
        "id": "0b08a77da5f4efc6",
        "label": "운전 모드",
        "name": "운전 모드",
        "options": [
            {
                "label": "일반 주기",
                "type": "num",
                "value": 1
            },
            {
                "label": "심야 점멸",
                "type": "num",
                "value": 2
            },
            {
                "label": "전체 적색",
                "type": "num",
                "value": 3
            }
        ],
        "order": 8,
        "passthru": true,
        "payload": "",
        "topic": "topic",
        "type": "ui_dropdown",
        "width": 8,
        "wires": [
            [
                "355e2c365f5fac33"
            ]
        ],
        "x": 120,
        "y": 1360,
        "z": "dee68aa0c07e4c62"
    },
    {
        "adr": "0",
        "dataType": "HoldingRegister",
        "delayOnStart": false,
        "emptyMsgOnFail": false,
        "id": "355e2c365f5fac33",
        "keepMsgProperties": false,
        "name": "Write Mode C",
        "quantity": "1",
        "server": "946a34dccba15f97",
        "showErrors": false,
        "showStatusActivities": false,
        "showWarnings": true,
        "startDelayTime": "",
        "type": "modbus-write",
        "unitid": "",
        "wires": [
            [],
            []
        ],
        "x": 360,
        "y": 1360,
        "z": "dee68aa0c07e4c62"
    },
    {
        "className": "",
        "format": "<div style=\"display: flex; flex-direction: column; align-items: center; justify-content: center; height: 100%;\">\n    <p style=\"margin: 0 0 5px 0; font-size: 14px; font-weight: bold;\">남쪽</p>\n    <div style=\"padding: 5px; background-color:#333; border-radius: 10px; width: 38px;\">\n        <div\n            style=\"height: 28px; width: 28px; border-radius: 50%; background-color: {{msg.payload.r ? 'red' : '#555'}}; border: 1px solid #666; margin: 3px auto;\">\n        </div>\n        <div\n            style=\"height: 28px; width: 28px; border-radius: 50%; background-color: {{msg.payload.y ? 'yellow' : '#555'}}; border: 1px solid #666; margin: 3px auto;\">\n        </div>\n        <div\n            style=\"height: 28px; width: 28px; border-radius: 50%; background-color: {{msg.payload.g ? 'lime' : '#555'}}; border: 1px solid #666; margin: 3px auto;\">\n        </div>\n    </div>\n</div>",
        "fwdInMessages": true,
        "group": "group_intersection_d",
        "height": 3,
        "id": "e88a0be821975599",
        "name": "남쪽",
        "order": 1,
        "resendOnRefresh": false,
        "storeOutMessages": true,
        "templateScope": "local",
        "type": "ui_template",
        "width": 2,
        "wires": [
            []
        ],
        "x": 1030,
        "y": 1880,
        "z": "dee68aa0c07e4c62"
    },
    {
        "className": "",
        "format": "<div style=\"display: flex; flex-direction: column; align-items: center; justify-content: center; height: 100%;\">\n    <p style=\"margin: 0 0 5px 0; font-size: 14px; font-weight: bold;\">동쪽</p>\n    <div style=\"padding: 5px; background-color:#333; border-radius: 10px; width: 38px;\">\n        <div\n            style=\"height: 28px; width: 28px; border-radius: 50%; background-color: {{msg.payload.r ? 'red' : '#555'}}; border: 1px solid #666; margin: 3px auto;\">\n        </div>\n        <div\n            style=\"height: 28px; width: 28px; border-radius: 50%; background-color: {{msg.payload.y ? 'yellow' : '#555'}}; border: 1px solid #666; margin: 3px auto;\">\n        </div>\n        <div\n            style=\"height: 28px; width: 28px; border-radius: 50%; background-color: {{msg.payload.g ? 'lime' : '#555'}}; border: 1px solid #666; margin: 3px auto;\">\n        </div>\n    </div>\n</div>",
        "fwdInMessages": true,
        "group": "group_intersection_d",
        "height": 3,
        "id": "2db686d5361a6c71",
        "name": "동쪽",
        "order": 2,
        "resendOnRefresh": false,
        "storeOutMessages": true,
        "templateScope": "local",
        "type": "ui_template",
        "width": 2,
        "wires": [
            []
        ],
        "x": 1030,
        "y": 1920,
        "z": "dee68aa0c07e4c62"
    },
    {
        "className": "",
        "format": "<div style=\"display: flex; flex-direction: column; align-items: center; justify-content: center; height: 100%;\">\n    <p style=\"margin: 0 0 5px 0; font-size: 14px; font-weight: bold;\">북쪽</p>\n    <div style=\"padding: 5px; background-color:#333; border-radius: 10px; width: 38px;\">\n        <div\n            style=\"height: 28px; width: 28px; border-radius: 50%; background-color: {{msg.payload.r ? 'red' : '#555'}}; border: 1px solid #666; margin: 3px auto;\">\n        </div>\n        <div\n            style=\"height: 28px; width: 28px; border-radius: 50%; background-color: {{msg.payload.y ? 'yellow' : '#555'}}; border: 1px solid #666; margin: 3px auto;\">\n        </div>\n        <div\n            style=\"height: 28px; width: 28px; border-radius: 50%; background-color: {{msg.payload.g ? 'lime' : '#555'}}; border: 1px solid #666; margin: 3px auto;\">\n        </div>\n    </div>\n</div>",
        "fwdInMessages": true,
        "group": "group_intersection_d",
        "height": 3,
        "id": "00a77946432e50f2",
        "name": "북쪽",
        "order": 3,
        "resendOnRefresh": false,
        "storeOutMessages": true,
        "templateScope": "local",
        "type": "ui_template",
        "width": 2,
        "wires": [
            []
        ],
        "x": 1030,
        "y": 1960,
        "z": "dee68aa0c07e4c62"
    },
    {
        "className": "",
        "format": "<div style=\"display: flex; flex-direction: column; align-items: center; justify-content: center; height: 100%;\">\n    <p style=\"margin: 0 0 5px 0; font-size: 14px; font-weight: bold;\">서쪽</p>\n    <div style=\"padding: 5px; background-color:#333; border-radius: 10px; width: 38px;\">\n        <div\n            style=\"height: 28px; width: 28px; border-radius: 50%; background-color: {{msg.payload.r ? 'red' : '#555'}}; border: 1px solid #666; margin: 3px auto;\">\n        </div>\n        <div\n            style=\"height: 28px; width: 28px; border-radius: 50%; background-color: {{msg.payload.y ? 'yellow' : '#555'}}; border: 1px solid #666; margin: 3px auto;\">\n        </div>\n        <div\n            style=\"height: 28px; width: 28px; border-radius: 50%; background-color: {{msg.payload.g ? 'lime' : '#555'}}; border: 1px solid #666; margin: 3px auto;\">\n        </div>\n    </div>\n</div>",
        "fwdInMessages": true,
        "group": "group_intersection_d",
        "height": 3,
        "id": "a8dba15a55818de7",
        "name": "서쪽",
        "order": 4,
        "resendOnRefresh": false,
        "storeOutMessages": true,
        "templateScope": "local",
        "type": "ui_template",
        "width": 2,
        "wires": [
            []
        ],
        "x": 1030,
        "y": 2000,
        "z": "dee68aa0c07e4c62"
    },
    {
        "group": "group_intersection_d",
        "height": 1,
        "id": "806ac6fd79a1c443",
        "label": "운전 모드",
        "name": "운전 모드",
        "options": [
            {
                "label": "일반 주기",
                "type": "num",
                "value": 1
            },
            {
                "label": "심야 점멸",
                "type": "num",
                "value": 2
            },
            {
                "label": "전체 적색",
                "type": "num",
                "value": 3
            }
        ],
        "order": 8,
        "passthru": true,
        "payload": "",
        "topic": "topic",
        "type": "ui_dropdown",
        "width": 8,
        "wires": [
            [
                "7d5f4905bc95bfbf"
            ]
        ],
        "x": 120,
        "y": 1420,
        "z": "dee68aa0c07e4c62"
    },
    {
        "adr": "0",
        "dataType": "HoldingRegister",
        "delayOnStart": false,
        "emptyMsgOnFail": false,
        "id": "7d5f4905bc95bfbf",
        "keepMsgProperties": false,
        "name": "Write Mode D",
        "quantity": "1",
        "server": "282a9bdec27cff20",
        "showErrors": false,
        "showStatusActivities": false,
        "showWarnings": true,
        "startDelayTime": "",
        "type": "modbus-write",
        "unitid": "",
        "wires": [
            [],
            []
        ],
        "x": 360,
        "y": 1420,
        "z": "dee68aa0c07e4c62"
    },
    {
        "className": "",
        "format": "{{msg.payload}} 초",
        "group": "group_intersection_a",
        "height": 1,
        "id": "d7269ed51651ddb6",
        "label": "남북 녹색 시간",
        "layout": "row-spread",
        "name": "",
        "order": 5,
        "type": "ui_text",
        "width": 4,
        "wires": [],
        "x": 1050,
        "y": 960,
        "z": "dee68aa0c07e4c62"
    },
    {
        "className": "",
        "format": "{{msg.payload}} 초",
        "group": "group_intersection_c",
        "height": 1,
        "id": "771639f0b2b32947",
        "label": "남북 녹색 시간",
        "layout": "row-spread",
        "name": "",
        "order": 5,
        "type": "ui_text",
        "width": 4,
        "wires": [],
        "x": 1050,
        "y": 1140,
        "z": "dee68aa0c07e4c62"
    },
    {
        "className": "",
        "format": "{{msg.payload}} 초",
        "group": "group_intersection_d",
        "height": 1,
        "id": "6104f0fa5b971a96",
        "label": "남북 녹색 시간",
        "layout": "row-spread",
        "name": "",
        "order": 5,
        "type": "ui_text",
        "width": 4,
        "wires": [],
        "x": 1050,
        "y": 1220,
        "z": "dee68aa0c07e4c62"
    },
    {
        "className": "",
        "format": "{{msg.payload}} 초",
        "group": "group_intersection_b",
        "height": 1,
        "id": "b87bbd73fddbdbd8",
        "label": "남북 녹색 시간",
        "layout": "row-spread",
        "name": "",
        "order": 5,
        "type": "ui_text",
        "width": 4,
        "wires": [],
        "x": 1050,
        "y": 1040,
        "z": "dee68aa0c07e4c62"
    },
    {
        "className": "",
        "format": "{{msg.payload}} 초",
        "group": "group_intersection_a",
        "height": 1,
        "id": "0aef3686c939f96f",
        "label": "동서 녹색 시간",
        "layout": "row-spread",
        "name": "",
        "order": 6,
        "type": "ui_text",
        "width": 4,
        "wires": [],
        "x": 1050,
        "y": 1000,
        "z": "dee68aa0c07e4c62"
    },
    {
        "className": "",
        "format": "{{msg.payload}} 초",
        "group": "group_intersection_b",
        "height": 1,
        "id": "722d642851a02237",
        "label": "동서 녹색 시간",
        "layout": "row-spread",
        "name": "",
        "order": 6,
        "type": "ui_text",
        "width": 4,
        "wires": [],
        "x": 1050,
        "y": 1080,
        "z": "dee68aa0c07e4c62"
    },
    {
        "className": "",
        "format": "{{msg.payload}} 초",
        "group": "group_intersection_c",
        "height": 1,
        "id": "fd211c9e070fa142",
        "label": "동서 녹색 시간",
        "layout": "row-spread",
        "name": "",
        "order": 6,
        "type": "ui_text",
        "width": 4,
        "wires": [],
        "x": 1050,
        "y": 1180,
        "z": "dee68aa0c07e4c62"
    },
    {
        "className": "",
        "format": "{{msg.payload}} 초",
        "group": "group_intersection_d",
        "height": 1,
        "id": "d6455d0a1f56ff49",
        "label": "동서 녹색 시간",
        "layout": "row-spread",
        "name": "",
        "order": 6,
        "type": "ui_text",
        "width": 4,
        "wires": [],
        "x": 1050,
        "y": 1260,
        "z": "dee68aa0c07e4c62"
    },
    {
        "action": "",
        "from": "",
        "id": "6c0b272f7162bc2e",
        "name": "Set Topic '녹색 시간'",
        "property": "",
        "reg": false,
        "rules": [
            {
                "p": "topic",
                "pt": "msg",
                "t": "set",
                "to": "녹색 시간",
                "tot": "str"
            }
        ],
        "to": "",
        "type": "change",
        "wires": [
            [
                "9478551b93ae47fc"
            ]
        ],
        "x": 1070,
        "y": 600,
        "z": "dee68aa0c07e4c62"
    },
    {
        "action": "",
        "from": "",
        "id": "c75d7dca645bc566",
        "name": "Set Topic '녹색 시간'",
        "property": "",
        "reg": false,
        "rules": [
            {
                "p": "topic",
                "pt": "msg",
                "t": "set",
                "to": "녹색 시간",
                "tot": "str"
            }
        ],
        "to": "",
        "type": "change",
        "wires": [
            [
                "31eb5358faa77077"
            ]
        ],
        "x": 1070,
        "y": 640,
        "z": "dee68aa0c07e4c62"
    },
    {
        "action": "",
        "from": "",
        "id": "408619d9673cd7ba",
        "name": "Set Topic '녹색 시간'",
        "property": "",
        "reg": false,
        "rules": [
            {
                "p": "topic",
                "pt": "msg",
                "t": "set",
                "to": "녹색 시간",
                "tot": "str"
            }
        ],
        "to": "",
        "type": "change",
        "wires": [
            [
                "7dd7a64caa59c4c5"
            ]
        ],
        "x": 1070,
        "y": 680,
        "z": "dee68aa0c07e4c62"
    },
    {
        "action": "",
        "from": "",
        "id": "eb76d62d7df730b1",
        "name": "Set Topic '녹색 시간'",
        "property": "",
        "reg": false,
        "rules": [
            {
                "p": "topic",
                "pt": "msg",
                "t": "set",
                "to": "녹색 시간",
                "tot": "str"
            }
        ],
        "to": "",
        "type": "change",
        "wires": [
            [
                "c16e4a1bce1125f3"
            ]
        ],
        "x": 1070,
        "y": 720,
        "z": "dee68aa0c07e4c62"
    },
    {
        "action": "",
        "from": "",
        "id": "acad591496809861",
        "name": "Set Topic '녹색 시간'",
        "property": "",
        "reg": false,
        "rules": [
            {
                "p": "topic",
                "pt": "msg",
                "t": "set",
                "to": "녹색 시간",
                "tot": "str"
            }
        ],
        "to": "",
        "type": "change",
        "wires": [
            [
                "69c25312d7754ca4"
            ]
        ],
        "x": 1070,
        "y": 760,
        "z": "dee68aa0c07e4c62"
    },
    {
        "action": "",
        "from": "",
        "id": "d879f0534c8e59b4",
        "name": "Set Topic '녹색 시간'",
        "property": "",
        "reg": false,
        "rules": [
            {
                "p": "topic",
                "pt": "msg",
                "t": "set",
                "to": "녹색 시간",
                "tot": "str"
            }
        ],
        "to": "",
        "type": "change",
        "wires": [
            [
                "b5f8bdbdb54cd929"
            ]
        ],
        "x": 1070,
        "y": 800,
        "z": "dee68aa0c07e4c62"
    },
    {
        "action": "",
        "from": "",
        "id": "81ea1ea3ce029d49",
        "name": "Set Topic '녹색 시간'",
        "property": "",
        "reg": false,
        "rules": [
            {
                "p": "topic",
                "pt": "msg",
                "t": "set",
                "to": "녹색 시간",
                "tot": "str"
            }
        ],
        "to": "",
        "type": "change",
        "wires": [
            [
                "493bed492d4f76fe"
            ]
        ],
        "x": 1070,
        "y": 840,
        "z": "dee68aa0c07e4c62"
    },
    {
        "action": "",
        "from": "",
        "id": "d6db03f9b8f5812b",
        "name": "Set Topic '녹색 시간'",
        "property": "",
        "reg": false,
        "rules": [
            {
                "p": "topic",
                "pt": "msg",
                "t": "set",
                "to": "녹색 시간",
                "tot": "str"
            }
        ],
        "to": "",
        "type": "change",
        "wires": [
            [
                "31ead39a8d44dd01"
            ]
        ],
        "x": 1070,
        "y": 880,
        "z": "dee68aa0c07e4c62"
    },
    {
        "active": true,
        "complete": "false",
        "console": false,
        "id": "170f1192e7948685",
        "name": "debug 1",
        "statusType": "auto",
        "statusVal": "",
        "tosidebar": true,
        "tostatus": false,
        "type": "debug",
        "wires": [],
        "x": 410,
        "y": 360,
        "z": "dee68aa0c07e4c62"
    },
    {
        "className": "",
        "group": "group_emergency_control",
        "height": 1,
        "id": "e8e67f2b.a45f9",
        "label": "시작 교차로 선택",
        "multiple": false,
        "name": "",
        "options": [
            {
                "label": "A 교차로",
                "type": "str",
                "value": "a"
            },
            {
                "label": "B 교차로",
                "type": "str",
                "value": "b"
            },
            {
                "label": "C 교차로",
                "type": "str",
                "value": "c"
            },
            {
                "label": "D 교차로",
                "type": "str",
                "value": "d"
            }
        ],
        "order": 4,
        "passthru": false,
        "payload": "",
        "place": "A 교차로가 기본값입니다",
        "tooltip": "",
        "topic": "topic",
        "topicType": "msg",
        "type": "ui_dropdown",
        "width": 12,
        "wires": [
            [
                "c3a1b2d3.12345"
            ]
        ],
        "x": 120,
        "y": 580,
        "z": "dee68aa0c07e4c62"
    },
    {
        "action": "",
        "from": "",
        "id": "c3a1b2d3.12345",
        "name": "선택 교차로 저장",
        "property": "",
        "reg": false,
        "rules": [
            {
                "p": "selected_intersection",
                "pt": "flow",
                "t": "set",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "to": "",
        "type": "change",
        "wires": [
            []
        ],
        "x": 340,
        "y": 540,
        "z": "dee68aa0c07e4c62"
    },
    {
        "bgcolor": "#52A062",
        "className": "",
        "color": "#FFFFFF",
        "group": "group_emergency_control",
        "height": "1",
        "icon": "fa-power-off",
        "id": "3b600ae2447a3b0c",
        "label": "전체 해제",
        "name": "",
        "order": 3,
        "passthru": false,
        "payload": "0",
        "payloadType": "num",
        "tooltip": "모든 교차로의 긴급 상황을 해제합니다",
        "topic": "topic",
        "topicType": "msg",
        "type": "ui_button",
        "width": "6",
        "wires": [
            [
                "093834d3a2a6e16f"
            ]
        ],
        "x": 100,
        "y": 420,
        "z": "dee68aa0c07e4c62"
    },
    {
        "bgcolor": "#E67E22",
        "className": "",
        "color": "",
        "group": "group_emergency_control",
        "height": "1",
        "icon": "fa-stop-circle-o",
        "id": "db10a697c6dc1234",
        "label": "선택 해제",
        "name": "",
        "order": 2,
        "passthru": false,
        "payload": "-1",
        "payloadType": "num",
        "tooltip": "드롭다운에서 선택된 교차로만 해제합니다",
        "topic": "topic",
        "topicType": "msg",
        "type": "ui_button",
        "width": "6",
        "wires": [
            [
                "093834d3a2a6e16f"
            ]
        ],
        "x": 100,
        "y": 460,
        "z": "dee68aa0c07e4c62"
    }
]