[
    {
        "id": "8b67e1cbd40d7fa8",
        "type": "tab",
        "label": "A 사거리 신호등",
        "disabled": false,
        "info": ""
    },
    {
        "id": "8586a0322bb53d59",
        "type": "modbus-client",
        "name": "Traffic_Light_Control",
        "clienttype": "tcp",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "queueLogEnabled": false,
        "failureLogEnabled": true,
        "tcpHost": "127.0.0.1",
        "tcpPort": "502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": 9600,
        "serialDatabits": 8,
        "serialStopbits": 1,
        "serialParity": "none",
        "serialConnectionDelay": 100,
        "serialAsciiResponseStartDelimiter": "0x3A",
        "unit_id": 1,
        "commandDelay": 1,
        "clientTimeout": 1000,
        "reconnectOnTimeout": true,
        "reconnectTimeout": 2000,
        "parallelUnitIdsAllowed": true,
        "showErrors": false,
        "showWarnings": true,
        "showLogs": true
    },
    {
        "id": "515f9fb6f19e066d",
        "type": "global-config",
        "env": [],
        "modules": {
            "node-red-contrib-modbus": "5.44.0"
        }
    },
    {
        "id": "e5b787e1d3bba45f",
        "type": "switch",
        "z": "8b67e1cbd40d7fa8",
        "name": "Switch Mode",
        "property": "payload[0]",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "2",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "3",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 430,
        "y": 200,
        "wires": [
            [
                "7a6f4ff41753d18e"
            ],
            [
                "b4c89f89c1d7d57a"
            ],
            [
                "ca5b39f1dd8bc115"
            ]
        ]
    },
    {
        "id": "7a6f4ff41753d18e",
        "type": "function",
        "z": "8b67e1cbd40d7fa8",
        "name": "Normal Cycle Logic",
        "func": "// Normal Cycle Logic - 순차 점등 방식\n// 한 방향 녹색, 나머지 방향은 적색으로 대기\n\n// 타이머 설정 (단위: 초)\nconst GREEN_TIME = 5;\nconst YELLOW_TIME = 2;\n\n// 이전 상태 및 타이머 값 불러오기\nlet state = context.get('state') || 0;\nlet timer = context.get('timer') || 0;\n\n// 12개 램프(코일)의 상태를 저장할 배열 초기화\nlet lights = new Array(12).fill(false);\n\nswitch (state) {\n    // --- 1번 신호등 (남쪽) ---\n    case 0: // 1번 녹색 / 2,3,4번 적색\n        lights[2] = true;  // 1번 녹색\n        lights[3] = true;  // 2번 적색\n        lights[6] = true;  // 3번 적색\n        lights[9] = true;  // 4번 적색\n        if (timer >= GREEN_TIME) { state = 1; timer = 0; }\n        break;\n    case 1: // 1번 황색 / 2,3,4번 적색\n        lights[1] = true;  // 1번 황색\n        lights[3] = true;  // 2번 적색\n        lights[6] = true;  // 3번 적색\n        lights[9] = true;  // 4번 적색\n        if (timer >= YELLOW_TIME) { state = 2; timer = 0; }\n        break;\n\n    // --- 2번 신호등 (동쪽) ---\n    case 2: // 2번 녹색 / 1,3,4번 적색\n        lights[5] = true;  // 2번 녹색\n        lights[0] = true;  // 1번 적색\n        lights[6] = true;  // 3번 적색\n        lights[9] = true;  // 4번 적색\n        if (timer >= GREEN_TIME) { state = 3; timer = 0; }\n        break;\n    case 3: // 2번 황색 / 1,3,4번 적색\n        lights[4] = true;  // 2번 황색\n        lights[0] = true;  // 1번 적색\n        lights[6] = true;  // 3번 적색\n        lights[9] = true;  // 4번 적색\n        if (timer >= YELLOW_TIME) { state = 4; timer = 0; }\n        break;\n\n    // --- 3번 신호등 (북쪽) ---\n    case 4: // 3번 녹색 / 1,2,4번 적색\n        lights[8] = true;  // 3번 녹색\n        lights[0] = true;  // 1번 적색\n        lights[3] = true;  // 2번 적색\n        lights[9] = true;  // 4번 적색\n        if (timer >= GREEN_TIME) { state = 5; timer = 0; }\n        break;\n    case 5: // 3번 황색 / 1,2,4번 적색\n        lights[7] = true;  // 3번 황색\n        lights[0] = true;  // 1번 적색\n        lights[3] = true;  // 2번 적색\n        lights[9] = true;  // 4번 적색\n        if (timer >= YELLOW_TIME) { state = 6; timer = 0; }\n        break;\n\n    // --- 4번 신호등 (서쪽) ---\n    case 6: // 4번 녹색 / 1,2,3번 적색\n        lights[11] = true; // 4번 녹색\n        lights[0] = true;  // 1번 적색\n        lights[3] = true;  // 2번 적색\n        lights[6] = true;  // 3번 적색\n        if (timer >= GREEN_TIME) { state = 7; timer = 0; }\n        break;\n    case 7: // 4번 황색 / 1,2,3번 적색\n        lights[10] = true; // 4번 황색\n        lights[0] = true;  // 1번 적색\n        lights[3] = true;  // 2번 적색\n        lights[6] = true;  // 3번 적색\n        if (timer >= YELLOW_TIME) { state = 0; timer = 0; } // 다시 처음(state 0)으로\n        break;\n}\n\n// 타이머 증가 및 상태 저장\ntimer++;\ncontext.set('state', state);\ncontext.set('timer', timer);\n\n// Modbus-write 노드로 전달할 메시지 (FC 15)\nmsg.payload = {\n    'value': lights,\n    'fc': 15,\n    'unitid': 1,\n    'address': 0,\n    'quantity': 12\n};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 160,
        "wires": [
            [
                "7af9c6f19ecb1102"
            ]
        ]
    },
    {
        "id": "b4c89f89c1d7d57a",
        "type": "function",
        "z": "8b67e1cbd40d7fa8",
        "name": "Night Flashing Logic",
        "func": "// Night Flashing Logic - 수정된 버전\n// 모든 신호등 황색 점멸\n\n// 점멸 상태를 토글하기 위한 변수\nlet blink = context.get('blink') || false;\nblink = !blink;\ncontext.set('blink', blink);\n\n// 12개 램프(코일)의 상태를 저장할 배열 초기화\nlet lights = new Array(12).fill(false);\n\nif (blink) {\n    // 모든 신호등의 황색 램프를 ON\n    lights[1] = true;  // 1번 황색\n    lights[4] = true;  // 2번 황색\n    lights[7] = true;  // 3번 황색\n    lights[10] = true; // 4번 황색\n}\n// blink가 false일 때는 모든 lights가 false이므로 모든 등이 꺼짐\n\n// Modbus-write 노드로 전달할 메시지 (FC 15)\nmsg.payload = {\n    'value': lights,\n    'fc': 15,\n    'unitid': 1,\n    'address': 0,\n    'quantity': 12\n};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 200,
        "wires": [
            [
                "7af9c6f19ecb1102"
            ]
        ]
    },
    {
        "id": "ca5b39f1dd8bc115",
        "type": "function",
        "z": "8b67e1cbd40d7fa8",
        "name": "All Red Logic",
        "func": "// All Red Logic - 수정된 버전\n// 모든 신호등 적색 점등\n\n// 12개 램프(코일)의 상태를 저장할 배열 초기화\nlet lights = new Array(12).fill(false);\n\n// 모든 신호등의 적색 램프를 ON\nlights[0] = true;  // 1번 적색\nlights[3] = true;  // 2번 적색\nlights[6] = true;  // 3번 적색\nlights[9] = true;  // 4번 적색\n\n// Modbus-write 노드로 전달할 메시지 (FC 15)\nmsg.payload = {\n    'value': lights,\n    'fc': 15,\n    'unitid': 1,\n    'address': 0,\n    'quantity': 12\n};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 240,
        "wires": [
            [
                "7af9c6f19ecb1102"
            ]
        ]
    },
    {
        "id": "bf1d25205644a6b4",
        "type": "modbus-read",
        "z": "8b67e1cbd40d7fa8",
        "name": "Read",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "1",
        "dataType": "HoldingRegister",
        "adr": "0",
        "quantity": "1",
        "rate": "1",
        "rateUnit": "s",
        "delayOnStart": false,
        "enableDeformedMessages": false,
        "startDelayTime": "",
        "server": "8586a0322bb53d59",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 250,
        "y": 200,
        "wires": [
            [
                "e5b787e1d3bba45f"
            ],
            [
                "488c2c72fc4a3db7"
            ]
        ]
    },
    {
        "id": "7af9c6f19ecb1102",
        "type": "modbus-write",
        "z": "8b67e1cbd40d7fa8",
        "name": "Write Lamp State",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "MCoils",
        "adr": "0",
        "quantity": "12",
        "server": "8586a0322bb53d59",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 950,
        "y": 200,
        "wires": [
            [
                "4c0fa1e883806ccf"
            ],
            [
                "4c0fa1e883806ccf"
            ]
        ]
    },
    {
        "id": "4c0fa1e883806ccf",
        "type": "debug",
        "z": "8b67e1cbd40d7fa8",
        "name": "debug 1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 980,
        "y": 340,
        "wires": []
    },
    {
        "id": "602a1b5d4e4c3e67",
        "type": "modbus-server",
        "z": "8b67e1cbd40d7fa8",
        "name": "",
        "logEnabled": false,
        "hostname": "0.0.0.0",
        "serverPort": "502",
        "responseDelay": 100,
        "delayUnit": "ms",
        "coilsBufferSize": 10000,
        "holdingBufferSize": 10000,
        "inputBufferSize": 10000,
        "discreteBufferSize": 10000,
        "showErrors": false,
        "showStatusActivities": false,
        "x": 320,
        "y": 400,
        "wires": [
            [],
            [],
            [],
            [],
            []
        ]
    },
    {
        "id": "488c2c72fc4a3db7",
        "type": "debug",
        "z": "8b67e1cbd40d7fa8",
        "name": "debug 2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 420,
        "y": 280,
        "wires": []
    }
]